{"ast":null,"code":"import { toast } from \"react-toastify\";\n\nfunction showSuccess(msg) {\n  return toast.success(msg);\n}\n\nfunction showInfo(msg) {\n  return toast.info(msg);\n}\n\nfunction showWarning(msg) {\n  return toast.warning(msg);\n}\n\nfunction showError(msg) {\n  return toast.error(msg);\n}\n\nfunction handleError(error) {\n  //error handling block\n  //accept any error\n  //parse error\n  //show then in UI\n  // debugger;  //It will pause the flow\n  const errors = error.response.data;\n  let errMsg;\n\n  if (errors & errors.msg) {\n    errMsg = errors.msg;\n  }\n\n  showError(errMsg);\n}\n\nexport default {\n  showSuccess,\n  showInfo,\n  showWarning,\n  handleError\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/util/notify.js"],"names":["toast","showSuccess","msg","success","showInfo","info","showWarning","warning","showError","error","handleError","errors","response","data","errMsg"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOF,KAAK,CAACG,OAAN,CAAcD,GAAd,CAAP;AACD;;AAED,SAASE,QAAT,CAAkBF,GAAlB,EAAuB;AACrB,SAAOF,KAAK,CAACK,IAAN,CAAWH,GAAX,CAAP;AACD;;AAED,SAASI,WAAT,CAAqBJ,GAArB,EAA0B;AACxB,SAAOF,KAAK,CAACO,OAAN,CAAcL,GAAd,CAAP;AACD;;AAED,SAASM,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,SAAOF,KAAK,CAACS,KAAN,CAAYP,GAAZ,CAAP;AACD;;AAED,SAASQ,WAAT,CAAqBD,KAArB,EAA4B;AAC1B;AACA;AACA;AACA;AAEA;AACA,QAAME,MAAM,GAAGF,KAAK,CAACG,QAAN,CAAeC,IAA9B;AACA,MAAIC,MAAJ;;AACA,MAAIH,MAAM,GAAGA,MAAM,CAACT,GAApB,EAAyB;AACvBY,IAAAA,MAAM,GAAGH,MAAM,CAACT,GAAhB;AACD;;AACDM,EAAAA,SAAS,CAACM,MAAD,CAAT;AACD;;AAED,eAAe;AACbb,EAAAA,WADa;AAEbG,EAAAA,QAFa;AAGbE,EAAAA,WAHa;AAIbI,EAAAA;AAJa,CAAf","sourcesContent":["import { toast } from \"react-toastify\";\n\nfunction showSuccess(msg) {\n  return toast.success(msg);\n}\n\nfunction showInfo(msg) {\n  return toast.info(msg);\n}\n\nfunction showWarning(msg) {\n  return toast.warning(msg);\n}\n\nfunction showError(msg) {\n  return toast.error(msg);\n}\n\nfunction handleError(error) {\n  //error handling block\n  //accept any error\n  //parse error\n  //show then in UI\n\n  // debugger;  //It will pause the flow\n  const errors = error.response.data;\n  let errMsg;\n  if (errors & errors.msg) {\n    errMsg = errors.msg;\n  }\n  showError(errMsg);\n}\n\nexport default {\n  showSuccess,\n  showInfo,\n  showWarning,\n  handleError\n};\n"]},"metadata":{},"sourceType":"module"}