{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/products/searchProduct/searchProduct.component.js\";\nimport React, { Component } from \"react\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nconst defaultForm = {\n  name: \"\",\n  category: \"\",\n  brand: \"\",\n  color: \"\",\n  minPrice: \"\",\n  maxPrice: \"\",\n  fromDate: \"\",\n  toDate: \"\",\n  discountedItem: \"\",\n  multipleDateRange: \"\",\n  tags: \"\"\n};\nexport class SearchProduct extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let {\n        type,\n        name,\n        value,\n        checked\n      } = e.target;\n\n      if (type === \"checkbox\") {\n        value = checked;\n      }\n\n      if (name === \"category\") {\n        this.buildNameOptions(value);\n      }\n\n      this.setState(preState => ({\n        data: { ...preState.data,\n          [name]: value\n        }\n      }), () => {\n        this.validateForm(name);\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //search\n\n      httpClient.GET('/product/search', false, this.state.data).then(response => {\n        console.log('search result is response');\n      }).catch(err => {\n        notify.handleError(err);\n      });\n    };\n\n    this.state = {\n      allProducts: [],\n      categories: [],\n      names: [],\n      data: { ...defaultForm\n      },\n      error: { ...defaultForm\n      },\n      isSubmitting: false,\n      isValidForm: false\n    };\n  }\n\n  componentDidMount() {\n    httpClient.POST(\"/product/search\", {}).then(response => {\n      let categories = [];\n      response.data.forEach(product => {\n        if (categories.indexOf(product.category) == -1) {\n          categories.push(product.category);\n        }\n      });\n      this.setState({\n        allProducts: response.data,\n        categories\n      });\n    }).catch(err => {\n      notify.handleError(err);\n    });\n  }\n\n  buildNameOptions(selectedCategory) {\n    let names = this.state.allProducts.filter(product => product.category == selectedCategory);\n    this.setState({\n      names\n    });\n  }\n\n  validateForm(fieldName) {\n    let errMsg;\n\n    switch (fieldName) {\n      case \"category\":\n        errMsg = this.state.data[fieldName] ? \"\" : \"Required Field*\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(preState => ({\n      error: { ...preState.error,\n        [fieldName]: errMsg\n      }\n    }), () => {\n      let errors = Object.values(this.state.error).filter(err => err);\n      this.setState({\n        isValidForm: errors.length === 0\n      });\n    });\n  }\n\n  render() {\n    // let btn = this.props.isSubmitting ? (\n    //     <button disabled className=\"btn btn-info\">\n    //       submitting...\n    //     </button>\n    //   ) : (\n    //     <button\n    //       disabled={!this.state.isValidForm}\n    //       type=\"submit\"\n    //       className=\"btn btn-info\"\n    //     >\n    //       submit\n    //     </button>\n    //   );\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Search Products Here\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"category\",\n      value: this.state.data.category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"(Selected Category)\"), this.state.categories.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, item))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, this.state.error.category), this.state.names.length && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.data.name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, \"(Select Name)\"), this.state.names.map(name => /*#__PURE__*/React.createElement(\"option\", {\n      value: name.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, name.name)))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Brand\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Brand\",\n      name: \"brand\",\n      value: this.state.data.brand,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Min Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      placeholder: \"Min Price\",\n      name: \"minPrice\",\n      value: this.state.data.minPrice,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"Max Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      placeholder: \"Max Price\",\n      name: \"maxPrice\",\n      value: this.state.data.maxPrice,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Color\",\n      name: \"color\",\n      value: this.state.data.color,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"Select Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      name: \"fromDate\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleChange,\n      name: \"multipleDateRange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"Multiple Date Range\"), this.state.data.multipleDateRange && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, \"To Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      name: \"toDate\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, \"Tags\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Tags\",\n      name: \"tags\",\n      value: this.state.data.tags,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, \"Weight\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Weight\",\n      name: \"weight\",\n      value: this.state.data.weight,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      isSubmitting: this.props.isSubmitting,\n      isValidForm: this.state.isValidForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/products/searchProduct/searchProduct.component.js"],"names":["React","Component","SubmitButton","httpClient","notify","defaultForm","name","category","brand","color","minPrice","maxPrice","fromDate","toDate","discountedItem","multipleDateRange","tags","SearchProduct","constructor","handleChange","e","type","value","checked","target","buildNameOptions","setState","preState","data","validateForm","handleSubmit","preventDefault","GET","state","then","response","console","log","catch","err","handleError","allProducts","categories","names","error","isSubmitting","isValidForm","componentDidMount","POST","forEach","product","indexOf","push","selectedCategory","filter","fieldName","errMsg","errors","Object","values","length","render","map","item","weight","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\n\nconst defaultForm = {\n  name: \"\",\n  category: \"\",\n  brand: \"\",\n  color: \"\",\n  minPrice: \"\",\n  maxPrice: \"\",\n  fromDate: \"\",\n  toDate: \"\",\n  discountedItem: \"\",\n  multipleDateRange:\"\",\n  tags: \"\",\n};\n\nexport class SearchProduct extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allProducts: [],\n      categories: [],\n      names: [],\n      data: { ...defaultForm },\n      error: { ...defaultForm },\n      isSubmitting: false,\n      isValidForm: false,\n    };\n  }\n\n  componentDidMount() {\n    httpClient\n      .POST(\"/product/search\", {})\n      .then((response) => {\n        let categories = [];\n        response.data.forEach((product) => {\n          if (categories.indexOf(product.category) == -1) {\n            categories.push(product.category);\n          }\n        });\n        this.setState({\n          allProducts: response.data,\n          categories,\n        });\n      })\n      .catch((err) => {\n        notify.handleError(err);\n      });\n  }\n\n  buildNameOptions(selectedCategory) {\n    let names = this.state.allProducts.filter(\n      (product) => product.category == selectedCategory\n    );\n    this.setState({\n      names,\n    });\n  }\n\n  handleChange = (e) => {\n    let { type, name, value, checked } = e.target;\n    if (type === \"checkbox\") {\n      value = checked;\n    }\n\n    if (name === \"category\") {\n      this.buildNameOptions(value);\n    }\n\n    this.setState(\n      (preState) => ({\n        data: {\n          ...preState.data,\n          [name]: value,\n        },\n      }),\n      () => {\n        this.validateForm(name);\n      }\n    );\n  };\n  validateForm(fieldName) {\n    let errMsg;\n    switch (fieldName) {\n      case \"category\":\n        errMsg = this.state.data[fieldName] ? \"\" : \"Required Field*\";\n        break;\n\n      default:\n        break;\n    }\n    this.setState(\n      (preState) => ({\n        error: {\n          ...preState.error,\n          [fieldName]: errMsg,\n        },\n      }),\n      () => {\n        let errors = Object.values(this.state.error).filter((err) => err);\n        this.setState({\n          isValidForm: errors.length === 0,\n        });\n      }\n    );\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //search\n    httpClient.GET('/product/search',false,this.state.data)\n      .then(response => {\n        console.log('search result is response');\n      })\n      .catch(err => {\n        notify.handleError(err);\n      })\n  };\n\n  render() {\n    // let btn = this.props.isSubmitting ? (\n    //     <button disabled className=\"btn btn-info\">\n    //       submitting...\n    //     </button>\n    //   ) : (\n    //     <button\n    //       disabled={!this.state.isValidForm}\n    //       type=\"submit\"\n    //       className=\"btn btn-info\"\n    //     >\n    //       submit\n    //     </button>\n    //   );\n\n    return (\n      <>\n        <div className=\"container\">\n          <h2>Search Products Here</h2>\n          <form className=\"form-group\" onSubmit={this.handleSubmit}>\n            <label>Category</label>\n            <select\n              className=\"form-control\"\n              name=\"category\"\n              value={this.state.data.category}\n              onChange={this.handleChange}\n            >\n              <option value=\"\" selected>\n                (Selected Category)\n              </option>\n              {this.state.categories.map((item) => (\n                <option value={item}>{item}</option>\n              ))}\n            </select>\n            <p className=\"error\">{this.state.error.category}</p>\n\n            {this.state.names.length && (\n              <>\n                <label>Name</label>\n                <select\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={this.state.data.name}\n                  onChange={this.handleChange}\n                >\n                  <option selected value=\"\">(Select Name)</option>\n                  {this.state.names.map((name) => (\n                    <option value={name.name}>{name.name}</option>\n                  ))}\n                </select>\n              </>\n            )}\n\n            <label>Brand</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Brand\"\n              name=\"brand\"\n              value={this.state.data.brand}\n              onChange={this.handleChange}\n            ></input>\n            <label>Min Price</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"Min Price\"\n              name=\"minPrice\"\n              value={this.state.data.minPrice}\n              onChange={this.handleChange}\n            ></input>\n            <label>Max Price</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"Max Price\"\n              name=\"maxPrice\"\n              value={this.state.data.maxPrice}\n              onChange={this.handleChange}\n            ></input>\n\n            <label>Color</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Color\"\n              name=\"color\"\n              value={this.state.data.color}\n              onChange={this.handleChange}\n            ></input>\n\n            <label>Select Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"fromDate\"\n              onChange={this.handleChange}\n            ></input>\n\n            <input type=\"checkbox\"\n              onChange={this.handleChange}\n              name=\"multipleDateRange\"\n            />\n            <label>Multiple Date Range</label>\n            {\n              this.state.data.multipleDateRange && (\n                <>\n                  <label>To Date</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"toDate\"\n                    onChange={this.handleChange}\n                  ></input>\n                </>\n              )\n            }\n            <br/>\n            <label>Tags</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Tags\"\n              name=\"tags\"\n              value={this.state.data.tags}\n              onChange={this.handleChange}\n            ></input>\n            <label>Weight</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Weight\"\n              name=\"weight\"\n              value={this.state.data.weight}\n              onChange={this.handleChange}\n            ></input>\n            <br />\n            <SubmitButton\n              isSubmitting={this.props.isSubmitting}\n              isValidForm={this.state.isValidForm}\n            />\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}