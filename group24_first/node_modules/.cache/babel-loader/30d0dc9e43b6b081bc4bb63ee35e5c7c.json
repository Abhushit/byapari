{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        data: {\n          [name]: value\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      httpClient.POST('/auth/forgot_password', this.state.data).then(data => {\n        notify.showInfo('Password reset link sent to your email, please check your inbox');\n        this.props.history.push('/');\n      }).catch(err => {\n        notify.handleError(err);\n        this.setState({\n          isSubmitting: false\n        });\n      });\n    };\n\n    this.state = {\n      data: {\n        email: ''\n      },\n      error: {\n        email: ''\n      },\n      isSubmitting: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"public_route\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Please provide your email address to reset your password\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required Email\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = \"Invalid Email Address\";\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      handleChange,\n      handleSubmit,\n      isSubmitting\n      /* and other goodies */\n\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }\n    }, errors.email && errors.email), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js"],"names":["React","Component","Formik","httpClient","notify","ForgotPassword","constructor","handleChange","e","name","value","target","setState","data","handleSubmit","preventDefault","isSubmitting","POST","state","then","showInfo","props","history","push","catch","err","handleError","email","error","render","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\n\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n        data: {\n            email: ''\n        },\n        error: {\n            email: ''\n        },\n        isSubmitting: false\n    };\n  }\n\n  handleChange = e => {\n      const { name, value} = e.target;\n      this.setState({\n          data: {\n              [name] : value\n          }\n      })\n  }\n\n  handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n          isSubmitting: true\n      })\n      httpClient.POST('/auth/forgot_password', this.state.data)\n        .then(data => {\n            notify.showInfo('Password reset link sent to your email, please check your inbox');\n            this.props.history.push('/');\n        })\n        .catch(err => {\n            notify.handleError(err);\n            this.setState({\n                isSubmitting:false\n            })\n        })\n  }\n\n  render() {\n    return (\n      <div className=\"public_route\">\n        <h2>Forgot Password</h2>\n        <p>Please provide your email address to reset your password</p>\n        <Formik\n          initialValues={{ email: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = \"Required Email\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid Email Address\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n        {({\n         values,\n         errors,\n         handleChange,\n         handleSubmit,\n         isSubmitting,\n         /* and other goodies */\n       }) => (\n         <form onSubmit={this.handleSubmit} className=\"form-group\">\n             <br/>\n             <label>Email Address</label>\n           <input\n           className=\"form-control\"\n             type=\"email\"\n             name=\"email\"\n             placeholder=\"Email\"\n             onChange={handleChange}\n             value={values.email}\n           />\n           <p className=\"error\">{errors.email && errors.email}</p>\n           <br/>\n           <button className=\"btn btn-primary\" type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n         </form>\n       )}\n       </Formik>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}