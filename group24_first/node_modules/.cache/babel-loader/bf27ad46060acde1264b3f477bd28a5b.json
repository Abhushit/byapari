{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk'; //in futurte we will add many middlewares\n\nconst middlewares = [thunk];\nconst initialState = {\n  product: {\n    products: [],\n    deletingItem: [],\n    isLoading: false\n  }\n};\n\nif (localStorage.getItem('cartItems')) {\n  initialState.cart = {\n    items: JSON.parse(localStorage.getItem('cartItems'))\n  };\n}\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState, composeEnhancer(applyMiddleware(...middlewares))); //function as an reducer\n//initialState\n//enhancer , middlewares","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/store.js"],"names":["createStore","applyMiddleware","compose","rootReducer","thunk","middlewares","initialState","product","products","deletingItem","isLoading","localStorage","getItem","cart","items","JSON","parse","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACD,KAAD,CAApB;AACA,MAAME,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,SAAS,EAAE;AAHN;AADQ,CAArB;;AAQA,IAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAqC;AACjCN,EAAAA,YAAY,CAACO,IAAb,GAAoB;AAACC,IAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AAAR,GAApB;AACH;;AAED,MAAMK,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAvE;AACA,OAAO,MAAMkB,KAAK,GAAGpB,WAAW,CAACG,WAAD,EAAcG,YAAd,EAA4BW,eAAe,CAAChB,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CAA3C,CAAzB,C,CACP;AACA;AACA","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\n//in futurte we will add many middlewares\nconst middlewares = [thunk];\nconst initialState = {\n    product: {\n        products: [],\n        deletingItem: [],\n        isLoading: false\n    }\n};\n\nif(localStorage.getItem('cartItems')){\n    initialState.cart = {items: JSON.parse(localStorage.getItem('cartItems'))}\n}\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState, composeEnhancer(applyMiddleware(...middlewares)));\n//function as an reducer\n//initialState\n//enhancer , middlewares\n\n"]},"metadata":{},"sourceType":"module"}