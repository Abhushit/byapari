{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/common/slider/sliderForm.component.js\";\nimport React, { Component } from \"react\";\nimport notify from \"../../util/notify\";\nimport httpClient from \"../../util/httpClient\";\nconst imgURL = process.env.REACT_APP_IMG_URL;\nconst defaultForm = {\n  sliderImage: \"\"\n};\nexport class SliderForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let {\n        type,\n        name,\n        value,\n        files\n      } = e.target; // console.log(\"files upload results are>>> \", files);\n\n      if (type === 'file') {\n        const {\n          fileUpload\n        } = this.state;\n        fileUpload.push(...files);\n        return this.setState({\n          fileUpload\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"file uploaded are>>\", this.state.fileUpload);\n      httpClient.UPLOAD('POST', '/slider', ...this.state.fileUpload).then(response => {\n        notify.showSuccess(\"Slider Added Successfully\");\n      }).catch(err => {\n        notify.handleError(err);\n      });\n    };\n\n    this.state = {\n      data: { ...defaultForm\n      },\n      fileUpload: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('state in slider form is>>', this.state);\n  }\n\n  render() {\n    // let sliderImg = this.state.fileUpload.name ?\n    // <img src={`${imgURL}/${this.state.fileUpload.name}`} className=\"img-fluid\" alt=\"slider\" />\n    // : ''\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Slider Details :\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.handleSubmit,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Slider Image\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: this.handleChange,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"submit\")));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/common/slider/sliderForm.component.js"],"names":["React","Component","notify","httpClient","imgURL","process","env","REACT_APP_IMG_URL","defaultForm","sliderImage","SliderForm","constructor","handleChange","e","type","name","value","files","target","fileUpload","state","push","setState","handleSubmit","preventDefault","console","log","UPLOAD","then","response","showSuccess","catch","err","handleError","data","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,OAAO,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AACxCU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,YAfc,GAeEC,CAAD,IAAO;AACpB,UAAI;AAACC,QAAAA,IAAD;AAAOC,QAAAA,IAAP;AAAaC,QAAAA,KAAb;AAAoBC,QAAAA;AAApB,UAA8BJ,CAAC,CAACK,MAApC,CADoB,CAEpB;;AACA,UAAGJ,IAAI,KAAK,MAAZ,EAAmB;AAEnB,cAAM;AAAEK,UAAAA;AAAF,YAAiB,KAAKC,KAA5B;AACAD,QAAAA,UAAU,CAACE,IAAX,CAAgB,GAAGJ,KAAnB;AACA,eAAO,KAAKK,QAAL,CAAc;AACnBH,UAAAA;AADmB,SAAd,CAAP;AAGD;;AACD,WAAKG,QAAL,CAAc;AACZ,SAACP,IAAD,GAAQC;AADI,OAAd;AAGD,KA7Be;;AAAA,SA8BdO,YA9Bc,GA8BEV,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACW,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKN,KAAL,CAAWD,UAA9C;AAEAhB,MAAAA,UAAU,CAACwB,MAAX,CAAkB,MAAlB,EAAyB,SAAzB,EAAmC,GAAG,KAAKP,KAAL,CAAWD,UAAjD,EACGS,IADH,CACSC,QAAD,IAAc;AAClB3B,QAAAA,MAAM,CAAC4B,WAAP,CAAmB,2BAAnB;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACd9B,QAAAA,MAAM,CAAC+B,WAAP,CAAmBD,GAAnB;AACD,OANH;AAOD,KAzCa;;AAEZ,SAAKZ,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAE,EACJ,GAAG1B;AADC,OADK;AAIXW,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC,KAAKN,KAA7C;AAED;;AA8BDgB,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAE,KAAKb,YAFjB;AAGE,MAAA,OAAO,EAAC,qBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAE,KAAKX,YAHjB;AAIE,MAAA,SAAS,EAAC,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAeE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CAFF,CADF;AAwBD;;AAzEuC","sourcesContent":["import React, { Component } from \"react\";\nimport notify from \"../../util/notify\";\nimport httpClient from \"../../util/httpClient\";\n\nconst imgURL = process.env.REACT_APP_IMG_URL\n\nconst defaultForm = {\n  sliderImage: \"\",\n\n};\nexport class SliderForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        ...defaultForm,\n      },\n      fileUpload: [],\n    };\n  }\n\n  componentDidMount() {\n    console.log('state in slider form is>>',this.state);\n\n  }\n\n  handleChange = (e) => {\n    let {type, name, value, files } = e.target;\n    // console.log(\"files upload results are>>> \", files);\n    if(type === 'file'){\n\n    const { fileUpload } = this.state;\n    fileUpload.push(...files);\n    return this.setState({\n      fileUpload,\n    });\n  }\n  this.setState({\n    [name]: value\n  })\n}\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"file uploaded are>>\", this.state.fileUpload);\n\n    httpClient.UPLOAD('POST','/slider',...this.state.fileUpload)\n      .then((response) => {\n        notify.showSuccess(\"Slider Added Successfully\");\n      })\n      .catch((err) => {\n        notify.handleError(err);\n      });\n  };\n\n  render() {\n    // let sliderImg = this.state.fileUpload.name ?\n    // <img src={`${imgURL}/${this.state.fileUpload.name}`} className=\"img-fluid\" alt=\"slider\" />\n    // : ''\n\n    return (\n      <div className=\"container\">\n        <h2>Slider Details :</h2>\n        <form\n          className=\"form-group\"\n          onSubmit={this.handleSubmit}\n          encType=\"multipart/form-data\"\n        >\n          <label>Slider Image</label>\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n          />\n          {/* {sliderImg} */}\n          \n          <br />\n          <button className=\"btn btn-primary\" type=\"submit\">\n            submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}