{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk'; //in futurte we will add many middlewares\n\nconst middlewares = [thunk];\nconst initialState = {\n  product: {\n    products: [],\n    deletingItem: [],\n    isLoading: false,\n    basketNumbers: 0,\n    cartCost: 0\n  }\n};\n\nconst localStorageMiddleware = ({\n  getState\n}) => {\n  return next => action => {\n    const result = next(action);\n\n    if ([ACTIONS.LOGIN].includes(result.type)) {\n      localStorage.setItem(appConstants.APP_STATE, JSON.stringify(getState()));\n    }\n\n    return result;\n  };\n};\n\nconst reHydrateStore = () => {\n  const data = localStorage.getItem(appConstants.APP_STATE);\n\n  if (data) {\n    return JSON.parse(data);\n  }\n\n  return undefined;\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState, reHydrateStore(), composeEnhancer(applyMiddleware(...middlewares, localStorageMiddleware))); //function as an reducer\n//initialState\n//enhancer , middlewares","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/store.js"],"names":["createStore","applyMiddleware","compose","rootReducer","thunk","middlewares","initialState","product","products","deletingItem","isLoading","basketNumbers","cartCost","localStorageMiddleware","getState","next","action","result","ACTIONS","LOGIN","includes","type","localStorage","setItem","appConstants","APP_STATE","JSON","stringify","reHydrateStore","data","getItem","parse","undefined","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACD,KAAD,CAApB;AACA,MAAME,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,aAAa,EAAE,CAJV;AAKLC,IAAAA,QAAQ,EAAE;AALL;AADQ,CAArB;;AAUA,MAAMC,sBAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3C,SAAOC,IAAI,IAAIC,MAAM,IAAI;AACzB,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;;AACA,QAAI,CAAEE,OAAO,CAACC,KAAV,EAAkBC,QAAlB,CAA2BH,MAAM,CAACI,IAAlC,CAAJ,EAA6C;AACzCC,MAAAA,YAAY,CAACC,OAAb,CAAqBC,YAAY,CAACC,SAAlC,EAA6CC,IAAI,CAACC,SAAL,CAAeb,QAAQ,EAAvB,CAA7C;AACH;;AACD,WAAOG,MAAP;AACH,GANG;AAQH,CATD;;AAWA,MAAMW,cAAc,GAAG,MAAM;AACzB,QAAMC,IAAI,GAAGP,YAAY,CAACQ,OAAb,CAAqBN,YAAY,CAACC,SAAlC,CAAb;;AACA,MAAII,IAAJ,EAAU;AACN,WAAOH,IAAI,CAACK,KAAL,CAAWF,IAAX,CAAP;AACH;;AACD,SAAOG,SAAP;AACH,CAND;;AASA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CjC,OAAvE;AACA,OAAO,MAAMkC,KAAK,GAAGpC,WAAW,CAACG,WAAD,EAAcG,YAAd,EAA2BsB,cAAc,EAAzC,EAA4CK,eAAe,CAAChC,eAAe,CAAC,GAAGI,WAAJ,EAAgBQ,sBAAhB,CAAhB,CAA3D,CAAzB,C,CACP;AACA;AACA","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\n//in futurte we will add many middlewares\nconst middlewares = [thunk];\nconst initialState = {\n    product: {\n        products: [],\n        deletingItem: [],\n        isLoading: false,\n        basketNumbers: 0,\n        cartCost: 0,\n    }\n};\n\nconst localStorageMiddleware = ({getState}) => {\n    return next => action => {\n    const result = next(action);\n    if ([ ACTIONS.LOGIN ].includes(result.type)) {\n        localStorage.setItem(appConstants.APP_STATE, JSON.stringify(getState()))\n    }\n    return result;\n};\n    \n}\n\nconst reHydrateStore = () => {\n    const data = localStorage.getItem(appConstants.APP_STATE);\n    if (data) {\n        return JSON.parse(data);\n    }\n    return undefined;\n}\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState,reHydrateStore(),composeEnhancer(applyMiddleware(...middlewares,localStorageMiddleware)));\n//function as an reducer\n//initialState\n//enhancer , middlewares\n\n"]},"metadata":{},"sourceType":"module"}