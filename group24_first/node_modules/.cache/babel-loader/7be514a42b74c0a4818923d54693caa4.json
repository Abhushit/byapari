{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { Link } from \"react-router-dom\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChanges = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState(preState => ({\n        data: { ...preState.data,\n          [name]: value\n        }\n      }), () => {\n        // console.log(\"callback part of setstate >>\", this.state);\n        //form validation\n        this.validateForm(name);\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      httpClient.POST(\"/auth/forgot_password\", this.state.data).then(data => {\n        notify.showInfo(\"Password reset link sent to your email, please check your inbox\");\n        this.props.history.push(\"/\");\n      }).catch(err => {\n        notify.handleError(err);\n        this.setState({\n          isSubmitting: false\n        });\n      });\n    };\n\n    this.state = {\n      data: {\n        email: \"\"\n      },\n      error: {\n        email: \"\"\n      },\n      isSubmitting: false,\n      isValidForm: false\n    };\n  }\n\n  validateForm(fieldName) {\n    let errMsg;\n\n    switch (fieldName) {\n      case \"email\":\n        errMsg = this.state.data[fieldName] ? this.state.data[fieldName].includes(\"@\") && this.state.data[fieldName].includes(\".com\") ? \"\" : \"Invalid Email\" : \"Required Field\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(preState => ({\n      error: { ...preState.error,\n        [fieldName]: errMsg\n      }\n    }), () => {\n      //now disable submit button when form is invalid\n      const {\n        error\n      } = this.state;\n      let err = Object.values(error).filter(item => item);\n      this.setState({\n        isValidForm: err.length === 0\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"public_route\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Please provide your email address to reset your password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      onChange: this.handleChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      isSubmitting: this.props.isSubmitting,\n      isValidForm: this.state.isValidForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"Back to\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 18\n      }\n    }, \" Login\")));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js"],"names":["React","Component","Formik","httpClient","notify","Link","SubmitButton","ForgotPassword","constructor","handleChanges","event","name","value","target","setState","preState","data","validateForm","handleSubmit","e","preventDefault","isSubmitting","POST","state","then","showInfo","props","history","push","catch","err","handleError","email","error","isValidForm","fieldName","errMsg","includes","Object","values","filter","item","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { Link } from \"react-router-dom\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\n\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        email: \"\",\n      },\n      error: {\n        email: \"\",\n      },\n      isSubmitting: false,\n      isValidForm: false,\n    };\n  }\n\n  handleChanges = (event) => {\n    const { name, value } = event.target;\n    this.setState(\n      (preState) => ({\n        data: {\n          ...preState.data,\n          [name]: value,\n        },\n      }),\n      () => {\n        // console.log(\"callback part of setstate >>\", this.state);\n        //form validation\n        this.validateForm(name);\n      }\n    );\n  };\n\n  validateForm(fieldName) {\n    let errMsg;\n    switch (fieldName) {\n      case \"email\":\n        errMsg = this.state.data[fieldName]\n          ? this.state.data[fieldName].includes(\"@\") &&\n            this.state.data[fieldName].includes(\".com\")\n            ? \"\"\n            : \"Invalid Email\"\n          : \"Required Field\";\n        break;\n\n      default:\n        break;\n    }\n    this.setState(\n      (preState) => ({\n        error: {\n          ...preState.error,\n          [fieldName]: errMsg,\n        },\n      }),\n      () => {\n        //now disable submit button when form is invalid\n\n        const { error } = this.state;\n        let err = Object.values(error).filter((item) => item);\n\n        this.setState({\n          isValidForm: err.length === 0,\n        });\n      }\n    );\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      isSubmitting: true,\n    });\n    httpClient\n      .POST(\"/auth/forgot_password\", this.state.data)\n      .then((data) => {\n        notify.showInfo(\n          \"Password reset link sent to your email, please check your inbox\"\n        );\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        notify.handleError(err);\n        this.setState({\n          isSubmitting: false,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"public_route\">\n        <h2>Forgot Password</h2>\n        <p>Please provide your email address to reset your password</p>\n        <form className=\"form-group\" onSubmit={this.handleSubmit}>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            onChange={this.handleChanges}\n          />\n          <br />\n          <SubmitButton\n            isSubmitting={this.props.isSubmitting}\n            isValidForm={this.state.isValidForm}\n          />\n        </form>\n        <div className=\"pull_right\">\n          Back to<Link to=\"/\"> Login</Link>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}