{"ast":null,"code":"import{toast}from\"react-toastify\";function showSuccess(msg){return toast.success(msg);}function showInfo(msg){return toast.info(msg);}function showWarning(msg){return toast.warning(msg);}function showError(msg){return toast.error(msg);}function handleError(error){//error handling block\n//accept any error\n//parse error\n//show then in UI\ndebugger;//It will pause the flow\nvar errors=error.response.data;var errMsg;if(errors&&errors.msg){errMsg=errors.msg;}showError(errMsg);}export default{showSuccess:showSuccess,showInfo:showInfo,showWarning:showWarning,handleError:handleError};","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/util/notify.js"],"names":["toast","showSuccess","msg","success","showInfo","info","showWarning","warning","showError","error","handleError","errors","response","data","errMsg"],"mappings":"AAAA,OAASA,KAAT,KAAsB,gBAAtB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,GAArB,CAA0B,CACxB,MAAOF,CAAAA,KAAK,CAACG,OAAN,CAAcD,GAAd,CAAP,CACD,CAED,QAASE,CAAAA,QAAT,CAAkBF,GAAlB,CAAuB,CACrB,MAAOF,CAAAA,KAAK,CAACK,IAAN,CAAWH,GAAX,CAAP,CACD,CAED,QAASI,CAAAA,WAAT,CAAqBJ,GAArB,CAA0B,CACxB,MAAOF,CAAAA,KAAK,CAACO,OAAN,CAAcL,GAAd,CAAP,CACD,CAED,QAASM,CAAAA,SAAT,CAAmBN,GAAnB,CAAwB,CACtB,MAAOF,CAAAA,KAAK,CAACS,KAAN,CAAYP,GAAZ,CAAP,CACD,CAED,QAASQ,CAAAA,WAAT,CAAqBD,KAArB,CAA4B,CAC1B;AACA;AACA;AACA;AAEA,SAAW;AACX,GAAME,CAAAA,MAAM,CAAGF,KAAK,CAACG,QAAN,CAAeC,IAA9B,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAIH,MAAM,EAAIA,MAAM,CAACT,GAArB,CAA0B,CACxBY,MAAM,CAAGH,MAAM,CAACT,GAAhB,CACD,CACDM,SAAS,CAACM,MAAD,CAAT,CACD,CAED,cAAe,CACbb,WAAW,CAAXA,WADa,CAEbG,QAAQ,CAARA,QAFa,CAGbE,WAAW,CAAXA,WAHa,CAIbI,WAAW,CAAXA,WAJa,CAAf","sourcesContent":["import { toast } from \"react-toastify\";\n\nfunction showSuccess(msg) {\n  return toast.success(msg);\n}\n\nfunction showInfo(msg) {\n  return toast.info(msg);\n}\n\nfunction showWarning(msg) {\n  return toast.warning(msg);\n}\n\nfunction showError(msg) {\n  return toast.error(msg);\n}\n\nfunction handleError(error) {\n  //error handling block\n  //accept any error\n  //parse error\n  //show then in UI\n\n  debugger;  //It will pause the flow\n  const errors = error.response.data;\n  let errMsg;\n  if (errors && errors.msg) {\n    errMsg = errors.msg;\n  }\n  showError(errMsg);\n}\n\nexport default {\n  showSuccess,\n  showInfo,\n  showWarning,\n  handleError\n};\n"]},"metadata":{},"sourceType":"module"}