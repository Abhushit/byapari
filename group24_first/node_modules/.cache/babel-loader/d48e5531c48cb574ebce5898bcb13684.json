{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/login/login.component.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Notify from './../../util/notify';\nexport class Login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      toast.info('loging in...');\n      e.preventDefault();\n      setTimeout(() => {\n        toast.error('Login failed');\n        this.props.history.push('/dashboard/test');\n      }, 2000); // const { chapter } = this.state;\n      // chapter += 1;\n      // let chapter = this.state.chapter;\n      // let newChapter = chapter + 1;\n      // this.setState({\n      //   chapter : newChapter\n      // })\n      // console.log(\"Check state>>\", this.state);\n      //http with username and password\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      remember_me: false,\n      chapter: 1\n    };\n    this.handleChanges = this.handleChanges.bind(this); //bind gareko\n\n    console.log(\"Constructor is first\");\n  } // componentWillMount(){\n  //   console.log('Before render component will mount');\n  // }\n\n\n  componentDidMount() {\n    console.log('check props >>', this.props);\n    Notify.showSuccess('Login page loaded'); //self invoked block\n    // console.log('I am component did mount');\n    // let { chapter } = this.state;\n    // this.interval = setInterval(() => {\n    //   chapter++;\n    //   this.setState({\n    //     chapter\n    //   })\n    // },1000)\n  }\n\n  componentDidUpdate(prevProps, prevState) {// console.log('prev state>>',prevState);\n    // console.log('Once the component data is updated > props or state');\n  }\n\n  componentWillUnmount() {// console.log('once component is destroyed');\n    // clearInterval(this.interval);\n    //its purpose is to close all unfinished jobs\n  }\n\n  handleChanges(event) {\n    // console.log('event >>',event);\n    // console.log('event target >>',event.target);\n    const {\n      name,\n      value\n    } = event.target; // console.log(\"name >>\", name);\n    // console.log(\"value >>\", value);\n\n    this.setState({\n      [name]: value\n    }); //State change trigger\n  }\n\n  render() {\n    // console.log(\"render at second\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Please login to start your session\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group form-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      className: \"form-control\",\n      id: \"username\",\n      name: \"username\",\n      onChange: this.handleChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      className: \"form-control\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.handleChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary mt-2\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Don't have an account?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Register \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }\n    }, \"Here\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pull_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgot_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"forgot password?\"))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/login/login.component.js"],"names":["React","Component","Link","Notify","Login","constructor","handleSubmit","e","toast","info","preventDefault","setTimeout","error","props","history","push","state","username","password","remember_me","chapter","handleChanges","bind","console","log","componentDidMount","showSuccess","componentDidUpdate","prevProps","prevState","componentWillUnmount","event","name","value","target","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Notify from './../../util/notify';\n\nexport class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      remember_me: false,\n      chapter: 1,\n    };\n    this.handleChanges = this.handleChanges.bind(this); //bind gareko\n    console.log(\"Constructor is first\");\n  }\n\n  // componentWillMount(){\n  //   console.log('Before render component will mount');\n  // }\n\n  componentDidMount(){\n    console.log('check props >>', this.props)\n    Notify.showSuccess('Login page loaded');\n    \n    //self invoked block\n    // console.log('I am component did mount');\n    // let { chapter } = this.state;\n    // this.interval = setInterval(() => {\n    //   chapter++;\n    //   this.setState({\n    //     chapter\n    //   })\n\n    // },1000)\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    // console.log('prev state>>',prevState);\n    // console.log('Once the component data is updated > props or state');\n  }\n\n  componentWillUnmount(){\n    // console.log('once component is destroyed');\n    // clearInterval(this.interval);\n    //its purpose is to close all unfinished jobs\n  }\n\n  handleChanges(event) {\n    // console.log('event >>',event);\n    // console.log('event target >>',event.target);\n    const { name, value } = event.target;\n    // console.log(\"name >>\", name);\n    // console.log(\"value >>\", value);\n    this.setState({\n      [name]: value,\n    });\n    //State change trigger\n  }\n\n  handleSubmit = (e) => {\n    toast.info('loging in...');\n    e.preventDefault();\n    setTimeout(() => {\n      toast.error('Login failed');\n      this.props.history.push('/dashboard/test');\n    },2000)\n    \n    // const { chapter } = this.state;\n    // chapter += 1;\n    // let chapter = this.state.chapter;\n    // let newChapter = chapter + 1;\n    // this.setState({\n    //   chapter : newChapter\n    // })\n    // console.log(\"Check state>>\", this.state);\n    //http with username and password\n  };\n\n  render() {\n    // console.log(\"render at second\");\n    return (\n      <div>\n        <h2>Login</h2>\n        <p>Please login to start your session</p>\n        <form className=\"form-group form-main\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            onChange={this.handleChanges}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            onChange={this.handleChanges}\n          />\n          <button className=\"btn btn-primary mt-2\" onClick={this.handleSubmit}>\n            Login\n          </button>\n        </form>\n        {/* <p>Current Chapter : {this.state.chapter}</p> */}\n        <p>Don't have an account?</p>\n        <p>\n          Register <Link to=\"/register\">Here</Link>\n          <span className=\"pull_right\">\n            <Link to=\"/forgot_password\">forgot password?</Link>\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}