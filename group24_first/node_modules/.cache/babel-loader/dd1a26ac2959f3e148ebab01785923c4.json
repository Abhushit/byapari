{"ast":null,"code":"import axios from \"axios\";\nconst BaseURL = process.env.REACT_APP_BASE_URL;\nconst http = axios.create({\n  baseURL: BaseURL,\n  responseType: \"json\"\n});\n\nconst getHeaders = isSecure => {\n  let options = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (isSecure) {\n    options[\"Authorization\"] = localStorage.getItem(\"token\");\n  }\n\n  return options;\n};\n\nfunction GET(url, isSecure = false, params = {}) {\n  //   http\n  //     .get(url, {\n  //       headers: getHeaders(),\n  //       params,\n  //     })\n  //     .then((data) => {\n  //       console.log(\"success in http client >>\", data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error in http client >>\", err);\n  //     });\n  return http.get(url, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nfunction POST(url, data, isSecure = false, params = {}) {\n  //   return new Promise((resolve, reject) => {\n  //     http\n  //       .post(url, data, {\n  //         headers: getHeaders(),\n  //         params,\n  //       })\n  //       .then((response) => {\n  //         resolve(response);\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  return http.post(url, data, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nfunction DELETE(url, isSecure = false, params = {}) {\n  return http.delete(url, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nfunction PUT(url, data, isSecure = false, params = {}) {\n  return http.put(url, data, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nfunction UPLOAD(url, data, files, isSecure = false, params = {}) {\n  //send request to server using xml http request\n  const xhr = new XMLHttpRequest();\n  const formData = new FormData();\n\n  if (files && files.length) {\n    formData.append(\"img\", files[0], files[0].name);\n  } //add each data in formdata\n\n\n  for (let key in data) {\n    formData.append(key, data[key]);\n  }\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState == 4) {\n      console.log('req res cycle completed');\n      console.log('response is here', xhr.response);\n    }\n  };\n\n  xhr.open(\"POST\", `${BaseURL}/product`, true);\n  xhr.send(formData);\n}\n\nexport default {\n  GET,\n  POST,\n  DELETE,\n  PUT,\n  UPLOAD\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/util/httpClient.js"],"names":["axios","BaseURL","process","env","REACT_APP_BASE_URL","http","create","baseURL","responseType","getHeaders","isSecure","options","localStorage","getItem","GET","url","params","get","headers","POST","data","post","DELETE","delete","PUT","put","UPLOAD","files","xhr","XMLHttpRequest","formData","FormData","length","append","name","key","onreadystatechange","readyState","console","log","response","open","send"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BaseURL = process.env.REACT_APP_BASE_URL;\nconst http = axios.create({\n  baseURL: BaseURL,\n  responseType: \"json\",\n});\n\nconst getHeaders = (isSecure) => {\n  let options = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (isSecure) {\n    options[\"Authorization\"] = localStorage.getItem(\"token\");\n  }\n  return options;\n};\n\nfunction GET(url, isSecure = false, params = {}) {\n  //   http\n  //     .get(url, {\n  //       headers: getHeaders(),\n  //       params,\n  //     })\n  //     .then((data) => {\n  //       console.log(\"success in http client >>\", data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error in http client >>\", err);\n  //     });\n  return http.get(url, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\n\nfunction POST(url, data, isSecure = false, params = {}) {\n  //   return new Promise((resolve, reject) => {\n  //     http\n  //       .post(url, data, {\n  //         headers: getHeaders(),\n  //         params,\n  //       })\n  //       .then((response) => {\n  //         resolve(response);\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  return http.post(url, data, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\n\nfunction DELETE(url, isSecure = false, params = {}) {\n  return http.delete(url, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\nfunction PUT(url, data, isSecure = false, params = {}) {\n  return http.put(url, data, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\n\nfunction UPLOAD(url, data, files, isSecure = false, params = {}) {\n  //send request to server using xml http request\n  const xhr = new XMLHttpRequest();\n  const formData = new FormData();\n  if (files && files.length) {\n    formData.append(\"img\", files[0], files[0].name);\n  }\n\n  //add each data in formdata\n  for(let key in data){\n    formData.append(key,data[key]);\n  }\n  xhr.onreadystatechange = () => {\n    if(xhr.readyState == 4){\n      console.log('req res cycle completed');\n      console.log('response is here',xhr.response);\n    }\n  }\n\n  xhr.open(\"POST\",`${BaseURL}/product`,true);\n  xhr.send(formData);\n}\n\nexport default {\n  GET,\n  POST,\n  DELETE,\n  PUT,\n  UPLOAD\n};\n"]},"metadata":{},"sourceType":"module"}