{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/common/chat/chat.component.js\";\nimport React, { Component } from \"react\";\nimport * as io from \"socket.io-client\";\nimport { Icon } from \"@iconify/react\";\nimport sendOutlined from \"@iconify/icons-ant-design/send-outlined\";\nimport dateUtil from \"./../../util/dateUtil\";\nimport notify from './../../util/notify';\nimport \"./chat.component.css\";\nexport default class ChatComponent extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(pre => ({\n        data: { ...pre.data,\n          [name]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        data\n      } = this.state;\n\n      if (!data.receiverId) {\n        return notify.showInfo('Please select a user to continue');\n      }\n\n      data.time = new Date();\n      data.senderName = this.state.currentUser.username;\n      this.socket.emit(\"new-msg\", data);\n      this.setState(pre => ({\n        data: { ...pre.data,\n          message: \"\"\n        }\n      }));\n    };\n\n    this.state = {\n      data: {\n        message: \"\",\n        senderId: \"\",\n        receiverId: \"\",\n        time: \"\",\n        senderName: \"\",\n        receiverName: \"\"\n      },\n      messages: [],\n      users: [],\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.socket = io.connect(process.env.REACT_APP_SOCKET_URL);\n    this.runSocket();\n    let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n    this.socket.emit(\"new-user\", currentUser.username);\n    this.setState({\n      currentUser\n    });\n  }\n\n  runSocket() {\n    this.socket.on(\"reply-msg\", messageData => {\n      const {\n        messages,\n        data\n      } = this.state;\n      messages.push(messageData); //swap sender as receiver\n\n      data.receiverId = messageData.senderId;\n      this.setState({\n        messages,\n        data\n      });\n    });\n    this.socket.on(\"reply-msg-own\", messageData => {\n      const {\n        messages,\n        data\n      } = this.state;\n      messages.push(messageData); //swap sender as receiver\n\n      data.receiverId = messageData.senderId;\n      this.setState({\n        messages,\n        data\n      });\n    });\n    this.socket.on(\"users\", users => {\n      this.setState({\n        users\n      });\n    });\n  }\n\n  selectUser(selectedUserId) {\n    this.setState(pre => ({\n      data: { ...pre.data,\n        receiverId: selectedUserId\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Let's Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ins\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sender-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Chat with\", \" \", this.state.currentUser && this.state.currentUser.username)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, this.state.messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"current-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, message.senderName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, message.message), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, dateUtil.relativeTime(message.time))))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group form-div\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"message\",\n      value: this.state.data.message,\n      className: \"form-control input-class\",\n      placeholder: \"your message here...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-send\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: sendOutlined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ins\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Users\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat_block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, this.state.users.map((user, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: () => this.selectUser(user.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, user.name))))))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/common/chat/chat.component.js"],"names":["React","Component","io","Icon","sendOutlined","dateUtil","notify","ChatComponent","constructor","handleChange","e","name","value","target","setState","pre","data","handleSubmit","preventDefault","state","receiverId","showInfo","time","Date","senderName","currentUser","username","socket","emit","message","senderId","receiverName","messages","users","componentDidMount","connect","process","env","REACT_APP_SOCKET_URL","runSocket","JSON","parse","localStorage","getItem","on","messageData","push","selectUser","selectedUserId","render","map","i","relativeTime","user","index","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as io from \"socket.io-client\";\nimport { Icon } from \"@iconify/react\";\nimport sendOutlined from \"@iconify/icons-ant-design/send-outlined\";\nimport dateUtil from \"./../../util/dateUtil\";\nimport notify from './../../util/notify'\nimport \"./chat.component.css\";\n\nexport default class ChatComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        message: \"\",\n        senderId: \"\",\n        receiverId: \"\",\n        time: \"\",\n        senderName: \"\",\n        receiverName: \"\",\n      },\n      messages: [],\n      users: [],\n      currentUser: null,\n    };\n  }\n  componentDidMount() {\n    this.socket = io.connect(process.env.REACT_APP_SOCKET_URL);\n    this.runSocket();\n    let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n    this.socket.emit(\"new-user\", currentUser.username);\n    \n    this.setState({\n      currentUser,\n    });\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState((pre) => ({\n      data: {\n        ...pre.data,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { data } = this.state;\n    if(!data.receiverId){\n      return notify.showInfo('Please select a user to continue');\n    }\n    data.time = new Date();\n    data.senderName = this.state.currentUser.username;\n    this.socket.emit(\"new-msg\", data);\n    this.setState((pre) => ({\n      data: {\n        ...pre.data,\n        message: \"\",\n      },\n    }));\n  };\n\n  runSocket() {\n    this.socket.on(\"reply-msg\", (messageData) => {\n      const { messages,data } = this.state;\n      messages.push(messageData);\n      //swap sender as receiver\n      data.receiverId = messageData.senderId;\n      this.setState({\n        messages,\n        data\n      });\n    });\n\n    this.socket.on(\"reply-msg-own\", (messageData) => {\n      const { messages,data } = this.state;\n      messages.push(messageData);\n      //swap sender as receiver\n      data.receiverId = messageData.senderId;\n      this.setState({\n        messages,\n        data\n      });\n    });\n\n\n    this.socket.on(\"users\", (users) => {\n      this.setState({\n        users,\n      });\n    });\n  }\n\n  selectUser(selectedUserId){\n    this.setState(pre => ({\n      data: {\n        ...pre.data,\n        receiverId: selectedUserId\n      }\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h2>Let's Chat</h2>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <ins>Messages</ins>\n            <div className=\"chat_block\">\n              <div className=\"sender-name\">\n                <p>\n                  Chat with{\" \"}\n                  {this.state.currentUser && this.state.currentUser.username}\n                </p>\n              </div>\n              <ul>\n                {this.state.messages.map((message, i) => (\n                  <li key={i}>\n                    <p class=\"current-user\">{message.senderName}</p>\n                    <p>{message.message}</p>\n                    <p className=\"light\">\n                      {dateUtil.relativeTime(message.time)}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n              <form\n                className=\"form-group form-div\"\n                onSubmit={this.handleSubmit}\n              >\n                <input\n                  type=\"text\"\n                  name=\"message\"\n                  value={this.state.data.message}\n                  className=\"form-control input-class\"\n                  placeholder=\"your message here...\"\n                  onChange={this.handleChange}\n                />\n                <button className=\"btn-send\" type=\"submit\">\n                  <Icon icon={sendOutlined} />\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <ins>Users</ins>\n            <div className=\"chat_block\">\n              <ul>\n                {this.state.users.map((user, index) => (\n                  <li key={index}>\n                    <button\n                      className=\"btn btn-default\"\n                      onClick={() => this.selectUser(user.id)}\n                    >\n                      {user.name}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}