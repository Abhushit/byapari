{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nexport default class ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.Basic = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    });\n\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Please provide your email address to reset your password\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required Email\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = \"Invalid Email Address\";\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), ({\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js"],"names":["React","Component","Formik","ForgotPassword","constructor","Basic","state","render","email","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACpDG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAKdC,KALc,GAKN,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA;;AAEZ,SAAKC,KAAL,GAAa,EAAb;AACD;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAFF,eAGE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OADjB;AAEE,MAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,cAAMC,MAAM,GAAG,EAAf;;AACA,YAAI,CAACD,MAAM,CAACD,KAAZ,EAAmB;AACjBE,UAAAA,MAAM,CAACF,KAAP,GAAe,gBAAf;AACD,SAFD,MAEO,IACL,CAAC,2CAA2CG,IAA3C,CAAgDF,MAAM,CAACD,KAAvD,CADI,EAEL;AACAE,UAAAA,MAAM,CAACF,KAAP,GAAe,uBAAf;AACD;;AACD,eAAOE,MAAP;AACD,OAZH;AAaE,MAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,QAAAA;AAAF,OAAT,KAA+B;AACvCC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAHS,EAGP,GAHO,CAAV;AAID,OAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAuBG,CAAC;AAAEK,MAAAA;AAAF,KAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CAxBJ,CADF;AAmCD;;AA5CmD","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\n\nexport default class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  Basic = () => <div></div>;\n\n  render() {\n    return (\n      <>\n        <h2>Forgot Password</h2>\n        <p>Please provide your email address to reset your password</p>\n        <Formik\n          initialValues={{ email: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = \"Required Email\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid Email Address\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        />\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}