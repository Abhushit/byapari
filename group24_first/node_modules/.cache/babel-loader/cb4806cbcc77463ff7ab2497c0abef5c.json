{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { Link } from \"react-router-dom\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        data: {\n          [name]: value\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmitting: true\n      });\n      httpClient.POST(\"/auth/forgot_password\", this.state.data).then(data => {\n        notify.showInfo(\"Password reset link sent to your email, please check your inbox\");\n        this.props.history.push(\"/\");\n      }).catch(err => {\n        notify.handleError(err);\n      });\n    };\n\n    this.state = {\n      data: {\n        email: \"\"\n      },\n      error: {\n        email: \"\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"public_route\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Please provide your email address to reset your password\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\"\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = \"Required Email\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = \"Invalid Email Address\";\n        }\n\n        return errors;\n      } //   onSubmit={(values, { setSubmitting }) => {\n      //     setTimeout(() => {\n      //       alert(JSON.stringify(values, null, 2));\n      //     //   console.log(values);\n      //       setSubmitting(false);\n      //     }, 400);\n      //   }}\n      ,\n      onSubmit: values => {\n        this.setState({\n          isSubmitting: true\n        });\n        httpClient.POST(\"/auth/forgot_password\", values).then(values => {\n          notify.showInfo(\"Password reset link sent to your email, please check your inbox\");\n          this.props.history.push(\"/\");\n        }).catch(err => {\n          notify.handleError(err);\n          this.setState({\n            isSubmitting: false\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      handleChange,\n      handleSubmit,\n      isSubmitting\n      /* and other goodies */\n\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, errors.email && errors.email), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      isSubmitting: this.state.isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pull_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Back to\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 18\n      }\n    }, \" Login\")));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/forgotPassword/forgotPassword.component.js"],"names":["React","Component","Formik","httpClient","notify","Link","SubmitButton","ForgotPassword","constructor","handleChange","e","name","value","target","setState","data","handleSubmit","preventDefault","isSubmitting","POST","state","then","showInfo","props","history","push","catch","err","handleError","email","error","render","values","errors","test"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { Link } from \"react-router-dom\";\nimport SubmitButton from \"../../common/submitButton/submitButton.component\";\n\nexport class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        email: \"\",\n      },\n      error: {\n        email: \"\",\n      },\n    };\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      data: {\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      isSubmitting: true,\n    });\n    httpClient\n      .POST(\"/auth/forgot_password\", this.state.data)\n      .then((data) => {\n        notify.showInfo(\n          \"Password reset link sent to your email, please check your inbox\"\n        );\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        notify.handleError(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"public_route\">\n        <h2>Forgot Password</h2>\n        <p>Please provide your email address to reset your password</p>\n        <Formik\n          initialValues={{ email: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = \"Required Email\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid Email Address\";\n            }\n            return errors;\n          }}\n          //   onSubmit={(values, { setSubmitting }) => {\n          //     setTimeout(() => {\n          //       alert(JSON.stringify(values, null, 2));\n          //     //   console.log(values);\n          //       setSubmitting(false);\n          //     }, 400);\n          //   }}\n          onSubmit={(values) => {\n            this.setState({\n              isSubmitting: true,\n            });\n            httpClient\n              .POST(\"/auth/forgot_password\", values)\n              .then((values) => {\n                notify.showInfo(\n                  \"Password reset link sent to your email, please check your inbox\"\n                );\n                this.props.history.push(\"/\");\n              })\n              .catch((err) => {\n                notify.handleError(err);\n                this.setState({\n                  isSubmitting: false,\n                });\n              });\n          }}\n        >\n          {({\n            values,\n            errors,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form onSubmit={handleSubmit} className=\"form-group\">\n              <br />\n              <label>Email Address</label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={handleChange}\n                value={values.email}\n              />\n              <p className=\"error\">{errors.email && errors.email}</p>\n              <br />\n              {/* <button\n                className=\"btn btn-primary\"\n                type=\"submit\"\n                disabled={isSubmitting}\n              >\n                Submit\n              </button> */}\n              <SubmitButton isSubmitting={this.state.isSubmitting} />\n            </form>\n          )}\n        </Formik>\n        <div className=\"pull_right\">\n          Back to<Link to=\"/\"> Login</Link>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}