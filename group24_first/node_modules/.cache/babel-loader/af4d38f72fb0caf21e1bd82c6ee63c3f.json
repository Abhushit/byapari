{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/categories/category.component.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProduct_ac } from \"../../actions/products/productActions\";\nimport httpClient from \"../util/httpClient\";\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      appProducts: [],\n      categories: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetch();\n    let names = this.props.products.filter(product => product.category === selectedCategory);\n    console.log('names is >>', names);\n  }\n\n  render() {\n    const {\n      products\n    } = this.props;\n    const cats = products.map(cat => cat.category);\n    const c = cats.filter((categ, index) => cats.indexOf(categ) === index);\n    c.map(item => console.log(\"products in props\", item));\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, \"Catgeory Page\");\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  products: store.product.products\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetch: () => dispatch(fetchProduct_ac)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/categories/category.component.js"],"names":["React","Component","connect","fetchProduct_ac","httpClient","Category","constructor","state","appProducts","categories","componentDidMount","props","fetch","names","products","filter","product","category","selectedCategory","console","log","render","cats","map","cat","c","categ","index","indexOf","item","mapStateToProps","store","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,KAAX;AAEA,QAAIC,KAAK,GAAG,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2BC,OAAO,IAC5CA,OAAO,CAACC,QAAR,KAAqBC,gBADX,CAAZ;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,KAA3B;AACD;;AAGDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKH,KAA1B;AACA,UAAMW,IAAI,GAAGR,QAAQ,CAACS,GAAT,CAAcC,GAAD,IAASA,GAAG,CAACP,QAA1B,CAAb;AAEA,UAAMQ,CAAC,GAAGH,IAAI,CAACP,MAAL,CAAY,CAACW,KAAD,EAAQC,KAAR,KAAkBL,IAAI,CAACM,OAAL,CAAaF,KAAb,MAAwBC,KAAtD,CAAV;AAEAF,IAAAA,CAAC,CAACF,GAAF,CAAOM,IAAD,IAAUV,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,IAAjC,CAAhB;AAIA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AA7B8B;;AAgCjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACf,OAAN,CAAcF;AADU,CAAZ,CAAxB;;AAIA,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,KAAK,EAAE,MAAMqB,QAAQ,CAAC9B,eAAD;AADmB,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProduct_ac } from \"../../actions/products/productActions\";\nimport httpClient from \"../util/httpClient\";\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      appProducts: [],\n      categories: ''\n    };\n  }\n  componentDidMount() {\n    this.props.fetch();\n\n    let names = this.props.products.filter(product => (\n      product.category === selectedCategory\n    ))\n    console.log('names is >>', names);\n  }\n\n\n  render() {\n    const { products } = this.props;\n    const cats = products.map((cat) => cat.category);\n\n    const c = cats.filter((categ, index) => cats.indexOf(categ) === index);\n\n    c.map((item) => console.log(\"products in props\", item));\n\n\n\n    return <h2>Catgeory Page</h2>;\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  products: store.product.products,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetch: () => dispatch(fetchProduct_ac),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n"]},"metadata":{},"sourceType":"module"}