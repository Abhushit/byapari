{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/products/cart/cart.component.js\";\nimport React, { Component } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusOutlined from \"@iconify/icons-ant-design/plus-outlined\";\nimport minusOutlined from \"@iconify/icons-ant-design/minus-outlined\";\nimport closeSquareFilled from \"@iconify/icons-ant-design/close-square-filled\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchProduct_ac } from \"../../../actions/products/productActions\";\nconst imgURL = process.env.REACT_APP_IMG_URL;\n\nclass Cart extends Component {\n  componentDidMount() {\n    // this.props.fetch();\n    // console.log(\"props in cart are>>\", this.props);\n    console.log('this basket>>', this.props.products);\n  }\n\n  render() {\n    console.log('cart in render>', this.props.products); // let addedItems = \n    //   // this.props.products && this.props.products.length > 0 ? (\n    //     <table className=\"table\">\n    //       <thead></thead>\n    //       <tbody>\n    //         {this.props.products && this.props.products.length > 0  &&\n    //           this.props.products.map((item, index) => (\n    //             <tr key={index}>\n    //               <td>{index + 1}</td>\n    //               <td>  \n    //                 {console.log('cart is>>', item)}\n    //               </td>\n    //               <td>\n    //                 <img\n    //                   src={`${imgURL}/${item.images[0]}`}\n    //                   alt=\"product_img.jpg\"\n    //                   width=\"150px\"\n    //                   height=\"150px\"\n    //                 />\n    //               </td>\n    //               <td>{item.name}</td>\n    //               <td>NRs. {item.price}</td>\n    //               <td>{item.brand}</td>\n    //               <td>{item.quantity}</td>\n    //               <td>\n    //                 <Link to=\"/cart\">\n    //                   <Icon icon={plusOutlined} />\n    //                 </Link>\n    //                 <Link to=\"/cart\">\n    //                   <Icon icon={minusOutlined} />\n    //                 </Link>\n    //               </td>\n    //               <td>\n    //                 <button className=\"btn-icons\" title=\"remove\">\n    //                   <Icon icon={closeSquareFilled} color=\"red\" />\n    //                 </button>\n    //               </td>\n    //             </tr>\n    //           ))}\n    //       </tbody>\n    //     </table>\n    //   // ) : (\n    //   //   <p>Nothing</p>\n    //   // );\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container page-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"You have Ordered :\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  products: store.product.products,\n  basketNumbers: store.product.basketNumbers\n});\n\nconst mapDispatchToProps = dispatch => ({// fetch: () => dispatch(fetchProduct_ac()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/products/cart/cart.component.js"],"names":["React","Component","Icon","plusOutlined","minusOutlined","closeSquareFilled","Link","connect","fetchProduct_ac","imgURL","process","env","REACT_APP_IMG_URL","Cart","componentDidMount","console","log","props","products","render","mapStateToProps","store","product","basketNumbers","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,0CAAhC;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AAEA,MAAMC,IAAN,SAAmBZ,SAAnB,CAA6B;AAC3Ba,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKC,KAAL,CAAWC,QAAxC;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKC,KAAL,CAAWC,QAA1C,EADO,CAGP;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA/D0B;;AAkE7B,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,QAAQ,EAAEG,KAAK,CAACC,OAAN,CAAcJ,QADU;AAElCK,EAAAA,aAAa,EAAGF,KAAK,CAACC,OAAN,CAAcC;AAFI,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe,CACxC;AADwC,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusOutlined from \"@iconify/icons-ant-design/plus-outlined\";\nimport minusOutlined from \"@iconify/icons-ant-design/minus-outlined\";\nimport closeSquareFilled from \"@iconify/icons-ant-design/close-square-filled\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchProduct_ac } from \"../../../actions/products/productActions\";\n\nconst imgURL = process.env.REACT_APP_IMG_URL;\n\nclass Cart extends Component {\n  componentDidMount() {\n    // this.props.fetch();\n    // console.log(\"props in cart are>>\", this.props);\n    console.log('this basket>>', this.props.products);\n  }\n  render() {\n    console.log('cart in render>', this.props.products);\n\n    // let addedItems = \n    //   // this.props.products && this.props.products.length > 0 ? (\n    //     <table className=\"table\">\n    //       <thead></thead>\n\n    //       <tbody>\n    //         {this.props.products && this.props.products.length > 0  &&\n    //           this.props.products.map((item, index) => (\n                \n    //             <tr key={index}>\n    //               <td>{index + 1}</td>\n    //               <td>  \n    //                 {console.log('cart is>>', item)}\n    //               </td>\n    //               <td>\n    //                 <img\n    //                   src={`${imgURL}/${item.images[0]}`}\n    //                   alt=\"product_img.jpg\"\n    //                   width=\"150px\"\n    //                   height=\"150px\"\n    //                 />\n    //               </td>\n    //               <td>{item.name}</td>\n    //               <td>NRs. {item.price}</td>\n    //               <td>{item.brand}</td>\n    //               <td>{item.quantity}</td>\n\n    //               <td>\n    //                 <Link to=\"/cart\">\n    //                   <Icon icon={plusOutlined} />\n    //                 </Link>\n    //                 <Link to=\"/cart\">\n    //                   <Icon icon={minusOutlined} />\n    //                 </Link>\n    //               </td>\n    //               <td>\n    //                 <button className=\"btn-icons\" title=\"remove\">\n    //                   <Icon icon={closeSquareFilled} color=\"red\" />\n    //                 </button>\n    //               </td>\n    //             </tr>\n    //           ))}\n    //       </tbody>\n    //     </table>\n    //   // ) : (\n    //   //   <p>Nothing</p>\n    //   // );\n\n    return (\n      <div className=\"container page-div\">\n        <h1>You have Ordered :</h1>\n        <div className=\"cart-page\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  products: store.product.products,\n  basketNumbers : store.product.basketNumbers\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // fetch: () => dispatch(fetchProduct_ac()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}