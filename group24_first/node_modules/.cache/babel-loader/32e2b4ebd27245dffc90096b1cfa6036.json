{"ast":null,"code":"import { SET_DELETING_ITEM, SET_IS_LOADING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_DETAILS_LOADED, SET_PRODUCTID, ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET } from \"./../actions/products/type\";\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0\n}; //TODO\n\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      let addQuantity = action.payload;\n      addQuantity.quantity += 1;\n      addQuantity.inCart = true;\n      console.log('addQuantity is>>', addQuantity);\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        // cartCost: state.cartCost + [action.payload].price,\n        cartCost: state.cartCost + addQuantity.price,\n        // ...state.products\n        // products: {\n        //   ...state.products,\n        //   [action.payload]:addQuantity\n        // }\n        products: {\n          inCart: true,\n          quantity: state.quantity + 1\n        }\n      };\n\n    case GET_NUMBERS_BASKET:\n      return { ...state\n      };\n\n    case PRODUCT_RECEIVED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case SET_IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case SET_PRODUCTID:\n      return { ...state,\n        productId: action.payload\n      };\n\n    case SET_DELETING_ITEM:\n      return { ...state,\n        deletingItem: action.payload\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products; // products.splice(action.payload, 1)\n\n      return { ...state.products.splice(action.payload, 1),\n        products: products\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return { ...state,\n        products: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //the sole purpoose of reducer is to upadte store","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/reducers/product.reducer.js"],"names":["SET_DELETING_ITEM","SET_IS_LOADING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_DETAILS_LOADED","SET_PRODUCTID","ADD_PRODUCT_BASKET","GET_NUMBERS_BASKET","initialState","isLoading","productId","products","deletingItem","basketNumbers","cartCost","productReducer","state","action","type","addQuantity","payload","quantity","inCart","console","log","price","splice"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,sBALF,EAMEC,aANF,EAOEC,kBAPF,EAQEC,kBARF,QASO,4BATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,aAAa,EAAE,CALI;AAMnBC,EAAAA,QAAQ,EAAE;AANS,CAArB,C,CASA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,kBAAL;AACE,UAAIa,WAAW,GAAGF,MAAM,CAACG,OAAzB;AACAD,MAAAA,WAAW,CAACE,QAAZ,IAAwB,CAAxB;AACAF,MAAAA,WAAW,CAACG,MAAZ,GAAqB,IAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BL,WAA/B;AAEA,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,aAAa,EAAEG,KAAK,CAACH,aAAN,GAAsB,CAFhC;AAGL;AACAC,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,GAAiBK,WAAW,CAACM,KAJlC;AAKL;AACA;AACA;AACA;AACA;AACAd,QAAAA,QAAQ,EAAE;AACRW,UAAAA,MAAM,EAAE,IADA;AAERD,UAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,GAAiB;AAFnB;AAVL,OAAP;;AAiBF,SAAKd,kBAAL;AACE,aAAO,EACL,GAAGS;AADE,OAAP;;AAGF,SAAKd,gBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACG;AAFZ,OAAP;;AAKF,SAAKnB,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACG;AAFb,OAAP;;AAKF,SAAKf,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACG;AAFb,OAAP;;AAKF,SAAKpB,iBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACG;AAFhB,OAAP;;AAKF,SAAKjB,eAAL;AACE,YAAMQ,QAAQ,GAAGK,KAAK,CAACL,QAAvB,CADF,CAEE;;AACA,aAAO,EACL,GAAGK,KAAK,CAACL,QAAN,CAAee,MAAf,CAAsBT,MAAM,CAACG,OAA7B,EAAsC,CAAtC,CADE;AAELT,QAAAA,QAAQ,EAAEA;AAFL,OAAP;;AAKF,SAAKP,sBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACG;AAFZ,OAAP;;AAOF;AACE,aAAO,EACL,GAAGJ;AADE,OAAP;AArEJ;AAyED,CA1EM,C,CA4EP","sourcesContent":["import {\n  SET_DELETING_ITEM,\n  SET_IS_LOADING,\n  PRODUCT_RECEIVED,\n  PRODUCT_REMOVED,\n  PRODUCT_DETAILS_LOADED,\n  SET_PRODUCTID,\n  ADD_PRODUCT_BASKET,\n  GET_NUMBERS_BASKET,\n} from \"./../actions/products/type\";\n\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n};\n\n//TODO\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      let addQuantity = action.payload ;\n      addQuantity.quantity += 1;\n      addQuantity.inCart = true;\n      console.log('addQuantity is>>',addQuantity);\n\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        // cartCost: state.cartCost + [action.payload].price,\n        cartCost: state.cartCost + addQuantity.price,\n        // ...state.products\n        // products: {\n        //   ...state.products,\n        //   [action.payload]:addQuantity\n        // }\n        products: {\n          inCart: true,\n          quantity: state.quantity + 1\n        }\n\n      };\n\n    case GET_NUMBERS_BASKET:\n      return {\n        ...state,\n      };\n    case PRODUCT_RECEIVED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_PRODUCTID:\n      return {\n        ...state,\n        productId: action.payload,\n      };\n\n    case SET_DELETING_ITEM:\n      return {\n        ...state,\n        deletingItem: action.payload,\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products;\n      // products.splice(action.payload, 1)\n      return {\n        ...state.products.splice(action.payload, 1),\n        products: products,\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n   \n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\n//the sole purpoose of reducer is to upadte store\n"]},"metadata":{},"sourceType":"module"}