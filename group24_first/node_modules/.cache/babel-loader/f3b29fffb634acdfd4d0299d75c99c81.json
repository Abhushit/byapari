{"ast":null,"code":"import { SET_IS_LOADING, SET_DELETING_ITEM, SET_IS_SUBMITTING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_ADDED } from \"./type\";\nimport httpClient from \"./../../components/util/httpClient\";\nimport notify from \"./../../components/util/notify\"; // function fetchProduct_ac(params){\n//     return function(dispatch){\n//         //calling a dispatch will execute reducer\n//     }\n// }\n\nexport const fetchProduct_ac = params => dispatch => {\n  console.log(\"At Actions from view >>\", params);\n  dispatch({\n    type: SET_IS_LOADING,\n    payload: true\n  });\n  httpClient.GET(\"/product\", true).then(response => {\n    response.data.forEach(item => {\n      item.$$isDeleting = false;\n    }); //dispatch action to reducer\n\n    console.log(\"there is a delay with http call now dispatch actin to reducer\");\n    dispatch({\n      type: PRODUCT_RECEIVED,\n      payload: response.data\n    });\n  }).catch(err => {\n    notify.handleError(err);\n  }).finally(() => {\n    dispatch({\n      type: SET_IS_LOADING,\n      payload: false\n    });\n  });\n};\nexport const addProduct_ac = () => dispatch => {\n  dispatch({\n    type: SET_IS_SUBMITTING,\n    payload: true\n  });\n  httpClient.UPLOAD('POST', '/product', data, files) // httpClient.POST('/product', data, true)\n  .then(response => {\n    // navigate to view proudct page\n    this.props.history.push('/view_product');\n    notify.showInfo(\"Product Added Successfully\");\n  });\n  dispatch({\n    type: PRODUCT_ADDED,\n    payload: response.data\n  }).catch(err => {\n    notify.handleError(err);\n  }).finally(() => {\n    dispatch({\n      type: SET_IS_SUBMITTING,\n      payload: false\n    });\n  });\n};\nexport const removeItem_ac = (item, index) => dispatch => {\n  dispatch({\n    type: SET_DELETING_ITEM,\n    payload: item._id\n  });\n  httpClient.DELETE(`/product/${item._id}`, true).then(response => {\n    notify.showInfo(\"Product Removed\");\n    dispatch({\n      type: PRODUCT_REMOVED,\n      payload: index\n    });\n  }).catch(err => {\n    notify.handleError(err);\n  });\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/actions/products/productActions.js"],"names":["SET_IS_LOADING","SET_DELETING_ITEM","SET_IS_SUBMITTING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_ADDED","httpClient","notify","fetchProduct_ac","params","dispatch","console","log","type","payload","GET","then","response","data","forEach","item","$$isDeleting","catch","err","handleError","finally","addProduct_ac","UPLOAD","files","props","history","push","showInfo","removeItem_ac","index","_id","DELETE"],"mappings":"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","sourcesContent":["import { SET_IS_LOADING,SET_DELETING_ITEM,SET_IS_SUBMITTING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_ADDED } from \"./type\";\nimport httpClient from \"./../../components/util/httpClient\";\nimport notify from \"./../../components/util/notify\";\n\n// function fetchProduct_ac(params){\n//     return function(dispatch){\n//         //calling a dispatch will execute reducer\n//     }\n// }\n\nexport const fetchProduct_ac = (params) => (dispatch) => {\n  console.log(\"At Actions from view >>\", params);\n  dispatch({\n    type: SET_IS_LOADING,\n    payload: true,\n  });\n  httpClient\n    .GET(\"/product\", true)\n    .then((response) => {\n      response.data.forEach((item) => {\n        item.$$isDeleting = false;\n      });\n      //dispatch action to reducer\n      console.log(\n        \"there is a delay with http call now dispatch actin to reducer\"\n      );\n      dispatch({\n        type: PRODUCT_RECEIVED,\n        payload: response.data,\n      });\n    })\n    .catch((err) => {\n      notify.handleError(err);\n    })\n    .finally(() => {\n      dispatch({\n        type: SET_IS_LOADING,\n        payload: false,\n      });\n    }); \n};\n\n\nexport const addProduct_ac = () => (dispatch) => {\n    dispatch({\n        type: SET_IS_SUBMITTING,\n        payload: true\n    })\n    httpClient.UPLOAD('POST','/product',data, files)\n        // httpClient.POST('/product', data, true)\n            .then(response => {\n                // navigate to view proudct page\n                this.props.history.push('/view_product');\n                notify.showInfo(\"Product Added Successfully\")\n            })\n            dispatch({\n                type: PRODUCT_ADDED,\n                payload: response.data\n            })\n            .catch(err => {\n                notify.handleError(err);\n            })\n            .finally(() => {\n                dispatch({\n                    type: SET_IS_SUBMITTING,\n                    payload:false\n                })\n            })\n}\n\nexport const removeItem_ac = (item,index) => dispatch => {\n        \n    dispatch({\n        type: SET_DELETING_ITEM,\n        payload: item._id\n    })\n    \n    httpClient\n        .DELETE(`/product/${item._id}`, true)\n        .then((response) => {\n          notify.showInfo(\"Product Removed\");\n          dispatch({\n              type: PRODUCT_REMOVED,\n              payload: index\n          })\n        })\n        .catch((err) => {\n          notify.handleError(err);\n        })\n       \n        \n}"]},"metadata":{},"sourceType":"module"}