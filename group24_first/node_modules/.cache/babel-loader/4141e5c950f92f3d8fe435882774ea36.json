{"ast":null,"code":"import axios from \"axios\";\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  responseType: \"json\"\n});\n\nconst getHeaders = isSecure => {\n  let options = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (isSecure) {\n    options['Authorization'] = localStorage.getItem('token');\n  }\n\n  return options;\n};\n\nfunction GET(url, isSecure = false, params = {}) {\n  //   http\n  //     .get(url, {\n  //       headers: getHeaders(),\n  //       params,\n  //     })\n  //     .then((data) => {\n  //       console.log(\"success in http client >>\", data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error in http client >>\", err);\n  //     });\n  return http.get(url, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nfunction POST(url, data, isSecure = false, params = {}) {\n  //   return new Promise((resolve, reject) => {\n  //     http\n  //       .post(url, data, {\n  //         headers: getHeaders(),\n  //         params,\n  //       })\n  //       .then((response) => {\n  //         resolve(response);\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  return http.post(url, data, {\n    headers: getHeaders(isSecure),\n    params\n  });\n}\n\nexport default {\n  GET,\n  POST\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/util/httpClient.js"],"names":["axios","http","create","baseURL","process","env","REACT_APP_BASE_URL","responseType","getHeaders","isSecure","options","localStorage","getItem","GET","url","params","get","headers","POST","data","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADG;AAExBC,EAAAA,YAAY,EAAE;AAFU,CAAb,CAAb;;AAKA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAC7B,MAAIC,OAAO,GAAG;AACZ,oBAAgB;AADJ,GAAd;;AAGA,MAAGD,QAAH,EAAY;AACVC,IAAAA,OAAO,CAAC,eAAD,CAAP,GAA2BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AACD;;AACD,SAAOF,OAAP;AACH,CARD;;AAUA,SAASG,GAAT,CAAaC,GAAb,EAAiBL,QAAQ,GAAG,KAA5B,EAAmCM,MAAM,GAAG,EAA5C,EAAgD;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOd,IAAI,CAACe,GAAL,CAASF,GAAT,EAAc;AACnBG,IAAAA,OAAO,EAAET,UAAU,CAACC,QAAD,CADA;AAEnBM,IAAAA;AAFmB,GAAd,CAAP;AAID;;AAED,SAASG,IAAT,CAAcJ,GAAd,EAAmBK,IAAnB,EAAyBV,QAAQ,GAAG,KAApC,EAA2CM,MAAM,GAAG,EAApD,EAAwD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOd,IAAI,CAACmB,IAAL,CAAUN,GAAV,EAAeK,IAAf,EAAqB;AAC1BF,IAAAA,OAAO,EAAET,UAAU,CAACC,QAAD,CADO;AAE1BM,IAAAA;AAF0B,GAArB,CAAP;AAID;;AAED,eAAe;AACbF,EAAAA,GADa;AAEbK,EAAAA;AAFa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  responseType: \"json\",\n});\n\nconst getHeaders = (isSecure) => {\n    let options = {\n      \"Content-Type\": \"application/json\",\n    }\n    if(isSecure){\n      options['Authorization'] = localStorage.getItem('token');\n    }\n    return options;\n};\n\nfunction GET(url,isSecure = false, params = {}) {\n  //   http\n  //     .get(url, {\n  //       headers: getHeaders(),\n  //       params,\n  //     })\n  //     .then((data) => {\n  //       console.log(\"success in http client >>\", data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"error in http client >>\", err);\n  //     });\n  return http.get(url, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\n\nfunction POST(url, data, isSecure = false, params = {}) {\n  //   return new Promise((resolve, reject) => {\n  //     http\n  //       .post(url, data, {\n  //         headers: getHeaders(),\n  //         params,\n  //       })\n  //       .then((response) => {\n  //         resolve(response);\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  return http.post(url, data, {\n    headers: getHeaders(isSecure),\n    params,\n  });\n}\n\nexport default {\n  GET,\n  POST,\n};\n"]},"metadata":{},"sourceType":"module"}