{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/products/addProduct/addProduct.component.js\";\nimport React, { Component } from \"react\";\nimport { ProductForm } from \"../productForm/productForm.component\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { connect } from \"react-redux\";\nimport { addProduct_ac } from \"../../../actions/products/productActions\";\n\nclass AddProduct extends Component {\n  constructor() {\n    super(); // this.state = {\n    //     isSubmitting: false\n    // };\n\n    this.add = (data, files) => {\n      this.setState({\n        isSubmitting: true\n      });\n      httpClient.UPLOAD('POST', '/product', data, files) // httpClient.POST('/product', data, true)\n      .then(response => {\n        // navigate to view proudct page\n        this.props.history.push('/view_product');\n        notify.showInfo(\"Product Added Successfully\");\n      }).catch(err => {\n        notify.handleError(err);\n      }).finally(() => {\n        this.setState({\n          isSubmitting: false\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductForm, {\n      title: \"Add Product\",\n      submitCallback: this.add,\n      isSubmitting: this.state.isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = store => {\n  isSubmitting: store.props.isSubmitting;\n};\n\nconst mapDispatchToProps = dispatch => {\n  addProduct_ac: (data, files) => dispatchEvent(addProduct_ac(data, files));\n};\n\nexport default connect()(AddProduct);","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/products/addProduct/addProduct.component.js"],"names":["React","Component","ProductForm","httpClient","notify","connect","addProduct_ac","AddProduct","constructor","add","data","files","setState","isSubmitting","UPLOAD","then","response","props","history","push","showInfo","catch","err","handleError","finally","render","state","mapStateToProps","store","mapDispatchToProps","dispatch","dispatchEvent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0CAA9B;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAE/BO,EAAAA,WAAW,GAAG;AACV,YADU,CAEV;AACA;AACA;;AAJU,SAQdC,GARc,GAQR,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAClB,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAE;AADJ,OAAd;AAGAV,MAAAA,UAAU,CAACW,MAAX,CAAkB,MAAlB,EAAyB,UAAzB,EAAoCJ,IAApC,EAA0CC,KAA1C,EACA;AADA,OAEKI,IAFL,CAEUC,QAAQ,IAAI;AACd;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACAf,QAAAA,MAAM,CAACgB,QAAP,CAAgB,4BAAhB;AACH,OANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVlB,QAAAA,MAAM,CAACmB,WAAP,CAAmBD,GAAnB;AACH,OATL,EAUKE,OAVL,CAUa,MAAM;AACX,aAAKZ,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH,OAdL;AAeH,KA3Ba;AAKb;;AAuBDY,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,aAAnB;AAAiC,MAAA,cAAc,EAAE,KAAKhB,GAAtD;AAA2D,MAAA,YAAY,EAAE,KAAKiB,KAAL,CAAWb,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIL;;AAnCgC;;AAsCnC,MAAMc,eAAe,GAAIC,KAAD,IAAU;AAC9Bf,EAAAA,YAAY,EAAEe,KAAK,CAACX,KAAN,CAAYJ,YAAZ;AACjB,CAFD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,IAAI;AACnCxB,EAAAA,aAAa,EAAE,CAACI,IAAD,EAAMC,KAAN,KAAgBoB,aAAa,CAACzB,aAAa,CAACI,IAAD,EAAMC,KAAN,CAAd,CAA7B;AAClB,CAFD;;AAIA,eAAeN,OAAO,GAAGE,UAAH,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport { ProductForm } from \"../productForm/productForm.component\";\nimport httpClient from \"../../util/httpClient\";\nimport notify from \"../../util/notify\";\nimport { connect } from \"react-redux\";\nimport { addProduct_ac } from \"../../../actions/products/productActions\";\n\n\nclass AddProduct extends Component {\n    \n    constructor() {\n        super();\n        // this.state = {\n        //     isSubmitting: false\n        // };\n    }\n \n\n    add = (data,files) => {\n        this.setState({\n            isSubmitting: true\n        })\n        httpClient.UPLOAD('POST','/product',data, files)\n        // httpClient.POST('/product', data, true)\n            .then(response => {\n                // navigate to view proudct page\n                this.props.history.push('/view_product');\n                notify.showInfo(\"Product Added Successfully\")\n            })\n            .catch(err => {\n                notify.handleError(err);\n            })\n            .finally(() => {\n                this.setState({\n                    isSubmitting: false\n                })\n            })\n    }\n    render() {\n        return (\n            <ProductForm title=\"Add Product\" submitCallback={this.add} isSubmitting={this.state.isSubmitting} ></ProductForm>\n        )\n\n  }\n}\n\nconst mapStateToProps = (store) =>{\n    isSubmitting: store.props.isSubmitting\n}\n\nconst mapDispatchToProps = dispatch => {\n    addProduct_ac: (data,files) => dispatchEvent(addProduct_ac(data,files))\n}\n\nexport default connect()(AddProduct);"]},"metadata":{},"sourceType":"module"}