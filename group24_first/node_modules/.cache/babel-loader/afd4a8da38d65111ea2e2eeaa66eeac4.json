{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk'; //in futurte we will add many middlewares\n\nconst middlewares = [thunk];\nconst initialState = {\n  product: {\n    products: [],\n    deletingItem: [],\n    isLoading: false,\n    basketNumbers: 0,\n    cartCost: 0\n  }\n};\n\nconst localStorageMiddleware = ({\n  getState\n}) => {\n  return next => action => {\n    const result = next(action);\n    localStorage.setItem('applicationState', JSON.stringify(getState));\n    return result;\n  };\n};\n\nconst reHydrateStore = () => {\n  if (localStorage.getItem('applicationState') !== null) {\n    return JSON.parse(localStorage.getItem('applicationState'));\n  }\n};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState, reHydrateStore(), composeEnhancer(applyMiddleware(...middlewares, localStorageMiddleware))); //function as an reducer\n//initialState\n//enhancer , middlewares","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/store.js"],"names":["createStore","applyMiddleware","compose","rootReducer","thunk","middlewares","initialState","product","products","deletingItem","isLoading","basketNumbers","cartCost","localStorageMiddleware","getState","next","action","result","localStorage","setItem","JSON","stringify","reHydrateStore","getItem","parse","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACD,KAAD,CAApB;AACA,MAAME,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,SAAS,EAAE,KAHN;AAILC,IAAAA,aAAa,EAAE,CAJV;AAKLC,IAAAA,QAAQ,EAAE;AALL;AADQ,CAArB;;AAUA,MAAMC,sBAAsB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3C,SAAQC,IAAD,IAAWC,MAAD,IAAY;AACzB,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CACrCP,QADqC,CAAzC;AAGA,WAAOG,MAAP;AACH,GAND;AAOH,CARD;;AAUA,MAAMK,cAAc,GAAG,MAAM;AACzB,MAAGJ,YAAY,CAACK,OAAb,CAAqB,kBAArB,MAA6C,IAAhD,EAAqD;AACjD,WAAOH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,kBAArB,CAAX,CAAP;AACH;AACJ,CAJD;;AAOA,MAAME,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CzB,OAAvE;AACA,OAAO,MAAM0B,KAAK,GAAG5B,WAAW,CAACG,WAAD,EAAcG,YAAd,EAA4BgB,cAAc,EAA1C,EAA8CG,eAAe,CAACxB,eAAe,CAAC,GAAGI,WAAJ,EAAgBQ,sBAAhB,CAAhB,CAA7D,CAAzB,C,CACP;AACA;AACA","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\n//in futurte we will add many middlewares\nconst middlewares = [thunk];\nconst initialState = {\n    product: {\n        products: [],\n        deletingItem: [],\n        isLoading: false,\n        basketNumbers: 0,\n        cartCost: 0,\n    }\n};\n\nconst localStorageMiddleware = ({getState}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        localStorage.setItem('applicationState', JSON.stringify(\n            getState\n        ));\n        return result;\n    }\n}\n\nconst reHydrateStore = () => {\n    if(localStorage.getItem('applicationState') !== null){\n        return JSON.parse(localStorage.getItem('applicationState'))\n    }\n}\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, initialState, reHydrateStore() ,composeEnhancer(applyMiddleware(...middlewares,localStorageMiddleware)));\n//function as an reducer\n//initialState\n//enhancer , middlewares\n\n"]},"metadata":{},"sourceType":"module"}