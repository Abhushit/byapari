{"ast":null,"code":"import { SET_DELETING_ITEM, SET_IS_LOADING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_DETAILS_LOADED, SET_PRODUCTID } from \"./../actions/products/type\";\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  addedItems: [],\n  total: 0\n}; //TODO\n\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PRODUCT_RECEIVED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case SET_IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case SET_PRODUCTID:\n      return { ...state,\n        productId: action.payload\n      };\n\n    case SET_DELETING_ITEM:\n      return { ...state,\n        deletingItem: action.payload\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products; // products.splice(action.payload, 1)\n\n      return { ...state.products.splice(action.payload, 1),\n        products: products\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return { ...state,\n        products: action.payload\n      };\n    // case ADD_TO_CART:\n    //   // let addedItem = state.products.find(products => products.payload === action.payload)\n    //   // let existedItems = state.addedItems.find(products => action.payload === products.payload)\n    //   // if(existedItems){\n    //   //   addedItem.quantity += 1\n    //   //   return{\n    //   //     ...state,\n    //   //     total: state.total + addedItem.price\n    //   //   }\n    //   // }\n    //   // else{\n    //   //   addedItem.quantity = 1\n    //   //   let newTotal = state.total + addedItem.price\n    //   //   return{\n    //   //     ...state,\n    //   //     addedItems: [...state.addedItems, addedItem],\n    //   //     total: newTotal\n    //   //   }\n    //   // }\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   //check if the action id exists in the addedItems\n    //   let existed_item = state.addedItems.find((item) => action.id === item.id);\n    //   if (existed_item) {\n    //     addedItem.quantity += 1;\n    //     return {\n    //       ...state,\n    //       total: state.total + addedItem.price,\n    //     };\n    //   } else {\n    //     addedItem.quantity = 1;\n    //     //calculating the total\n    //     let newTotal = state.total + addedItem.price;\n    //     return {\n    //       ...state,\n    //       addedItems: [...state.addedItems, addedItem],\n    //       total: newTotal,\n    //     };\n    //   }\n    // case REMOVE_ITEM:\n    //   let itemToRemove = state.addedItems.find((item) => action.id === item.id);\n    //   let new_items = state.addedItems.filter((item) => action.id !== item.id);\n    //   //calculating the total\n    //   let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    //   console.log(itemToRemove);\n    //   return {\n    //     ...state,\n    //     addedItems: new_items,\n    //     total: newTotal,\n    //   };\n    // case ADD_QUANTITY:\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   addedItem.quantity += 1;\n    //   let newTotal = state.total + addedItem.price;\n    //   return {\n    //     ...state,\n    //     total: newTotal,\n    //   };\n    // case SUBTRACT_QUANTITY:\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   //if the qt == 0 then it should be removed\n    //   if (addedItem.quantity === 1) {\n    //     let new_items = state.addedItems.filter(\n    //       (item) => item.id !== action.id\n    //     );\n    //     let newTotal = state.total - addedItem.price;\n    //     return {\n    //       ...state,\n    //       addedItems: new_items,\n    //       total: newTotal,\n    //     };\n    //   } else {\n    //     addedItem.quantity -= 1;\n    //     let newTotal = state.total - addedItem.price;\n    //     return {\n    //       ...state,\n    //       total: newTotal,\n    //     };\n    //   }\n    // case ADD_SHIPPING:\n    //   return {\n    //     ...state,\n    //     total: state.total + 6,\n    //   };\n\n    default:\n      return { ...state\n      };\n  }\n}; //the sole purpoose of reducer is to upadte store","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/reducers/product.reducer.js"],"names":["SET_DELETING_ITEM","SET_IS_LOADING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_DETAILS_LOADED","SET_PRODUCTID","initialState","isLoading","productId","products","deletingItem","addedItems","total","productReducer","state","action","type","payload","splice"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,sBALF,EAMEC,aANF,QAOO,4BAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,UAAU,EAAE,EALO;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB,C,CASA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFZ,OAAP;;AAKF,SAAKhB,cAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACE;AAFhB,OAAP;;AAKF,SAAKd,eAAL;AACE,YAAMM,QAAQ,GAAGK,KAAK,CAACL,QAAvB,CADF,CAEE;;AACA,aAAO,EACL,GAAGK,KAAK,CAACL,QAAN,CAAeS,MAAf,CAAsBH,MAAM,CAACE,OAA7B,EAAsC,CAAtC,CADE;AAELR,QAAAA,QAAQ,EAAEA;AAFL,OAAP;;AAKF,SAAKL,sBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFZ,OAAP;AAKF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAO,EACL,GAAGH;AADE,OAAP;AApIJ;AAwID,CAzIM,C,CA2IP","sourcesContent":["import {\n  SET_DELETING_ITEM,\n  SET_IS_LOADING,\n  PRODUCT_RECEIVED,\n  PRODUCT_REMOVED,\n  PRODUCT_DETAILS_LOADED,\n  SET_PRODUCTID,\n} from \"./../actions/products/type\";\n\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  addedItems: [],\n  total: 0,\n};\n\n//TODO\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PRODUCT_RECEIVED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_PRODUCTID:\n      return {\n        ...state,\n        productId: action.payload,\n      };\n\n    case SET_DELETING_ITEM:\n      return {\n        ...state,\n        deletingItem: action.payload,\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products;\n      // products.splice(action.payload, 1)\n      return {\n        ...state.products.splice(action.payload, 1),\n        products: products,\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    // case ADD_TO_CART:\n    //   // let addedItem = state.products.find(products => products.payload === action.payload)\n    //   // let existedItems = state.addedItems.find(products => action.payload === products.payload)\n\n    //   // if(existedItems){\n    //   //   addedItem.quantity += 1\n    //   //   return{\n    //   //     ...state,\n    //   //     total: state.total + addedItem.price\n    //   //   }\n    //   // }\n    //   // else{\n    //   //   addedItem.quantity = 1\n    //   //   let newTotal = state.total + addedItem.price\n    //   //   return{\n    //   //     ...state,\n    //   //     addedItems: [...state.addedItems, addedItem],\n    //   //     total: newTotal\n    //   //   }\n    //   // }\n\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   //check if the action id exists in the addedItems\n    //   let existed_item = state.addedItems.find((item) => action.id === item.id);\n    //   if (existed_item) {\n    //     addedItem.quantity += 1;\n    //     return {\n    //       ...state,\n    //       total: state.total + addedItem.price,\n    //     };\n    //   } else {\n    //     addedItem.quantity = 1;\n    //     //calculating the total\n    //     let newTotal = state.total + addedItem.price;\n\n    //     return {\n    //       ...state,\n    //       addedItems: [...state.addedItems, addedItem],\n    //       total: newTotal,\n    //     };\n    //   }\n\n    // case REMOVE_ITEM:\n    //   let itemToRemove = state.addedItems.find((item) => action.id === item.id);\n    //   let new_items = state.addedItems.filter((item) => action.id !== item.id);\n\n    //   //calculating the total\n    //   let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    //   console.log(itemToRemove);\n    //   return {\n    //     ...state,\n    //     addedItems: new_items,\n    //     total: newTotal,\n    //   };\n\n    // case ADD_QUANTITY:\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   addedItem.quantity += 1;\n    //   let newTotal = state.total + addedItem.price;\n    //   return {\n    //     ...state,\n    //     total: newTotal,\n    //   };\n\n    // case SUBTRACT_QUANTITY:\n    //   let addedItem = state.items.find((item) => item.id === action.id);\n    //   //if the qt == 0 then it should be removed\n    //   if (addedItem.quantity === 1) {\n    //     let new_items = state.addedItems.filter(\n    //       (item) => item.id !== action.id\n    //     );\n    //     let newTotal = state.total - addedItem.price;\n    //     return {\n    //       ...state,\n    //       addedItems: new_items,\n    //       total: newTotal,\n    //     };\n    //   } else {\n    //     addedItem.quantity -= 1;\n    //     let newTotal = state.total - addedItem.price;\n    //     return {\n    //       ...state,\n    //       total: newTotal,\n    //     };\n    //   }\n\n    // case ADD_SHIPPING:\n    //   return {\n    //     ...state,\n    //     total: state.total + 6,\n    //   };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\n//the sole purpoose of reducer is to upadte store\n"]},"metadata":{},"sourceType":"module"}