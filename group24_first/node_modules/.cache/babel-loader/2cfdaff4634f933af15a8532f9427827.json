{"ast":null,"code":"import { SET_DELETING_ITEM, SET_IS_LOADING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_DETAILS_LOADED, SET_PRODUCTID, ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET, INCREASE_QUANTITY, DECREASE_QUANTITY } from \"./../actions/products/type\";\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n  productSelected: ''\n}; //TODO\n\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      let productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true;\n      console.log(\"productSelected is>>\", productSelected);\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price // products:{\n        //   ...state.products,\n        //   [action.payload]: productSelected\n        // }\n\n      };\n\n    case GET_NUMBERS_BASKET:\n      return { ...state\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      return { ...state,\n        cartCost: state.cartCost + productSelected.price\n      };\n\n    case DECREASE_QUANTITY:\n      return { ...state\n      };\n\n    case PRODUCT_RECEIVED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case SET_IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case SET_PRODUCTID:\n      return { ...state,\n        productId: action.payload\n      };\n\n    case SET_DELETING_ITEM:\n      return { ...state,\n        deletingItem: action.payload\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products; // products.splice(action.payload, 1)\n\n      return { ...state.products.splice(action.payload, 1),\n        products: products\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return { ...state,\n        products: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //the sole purpoose of reducer is to upadte store","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/reducers/product.reducer.js"],"names":["SET_DELETING_ITEM","SET_IS_LOADING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_DETAILS_LOADED","SET_PRODUCTID","ADD_PRODUCT_BASKET","GET_NUMBERS_BASKET","INCREASE_QUANTITY","DECREASE_QUANTITY","initialState","isLoading","productId","products","deletingItem","basketNumbers","cartCost","productSelected","productReducer","state","action","type","payload","quantity","inCart","console","log","price","splice"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,sBALF,EAMEC,aANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,iBATF,EAUEC,iBAVF,QAWO,4BAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,aAAa,EAAE,CALI;AAMnBC,EAAAA,QAAQ,EAAE,CANS;AAOnBC,EAAAA,eAAe,EAAE;AAPE,CAArB,C,CAUA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,kBAAL;AACE,UAAIW,eAAe,GAAGG,MAAM,CAACE,OAA7B;AACAL,MAAAA,eAAe,CAACM,QAAhB,IAA4B,CAA5B;AACAN,MAAAA,eAAe,CAACO,MAAhB,GAAyB,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCT,eAApC;AAEA,aAAO,EACL,GAAGE,KADE;AAELJ,QAAAA,aAAa,EAAEI,KAAK,CAACJ,aAAN,GAAsB,CAFhC;AAGLC,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiBC,eAAe,CAACU,KAHtC,CAIL;AACA;AACA;AACA;;AAPK,OAAP;;AAUF,SAAKpB,kBAAL;AACE,aAAO,EACL,GAAGY;AADE,OAAP;;AAIF,SAAKX,iBAAL;AACES,MAAAA,eAAe,GAAGG,MAAM,CAACE,OAAzB;AACAL,MAAAA,eAAe,CAACM,QAAhB,IAA4B,CAA5B;AACA,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiBC,eAAe,CAACU;AAFtC,OAAP;;AAKF,SAAKlB,iBAAL;AACE,aAAO,EACL,GAAGU;AADE,OAAP;;AAIF,SAAKjB,gBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAKF,SAAKrB,cAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELR,QAAAA,SAAS,EAAES,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKjB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKtB,iBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAFhB,OAAP;;AAKF,SAAKnB,eAAL;AACE,YAAMU,QAAQ,GAAGM,KAAK,CAACN,QAAvB,CADF,CAEE;;AACA,aAAO,EACL,GAAGM,KAAK,CAACN,QAAN,CAAee,MAAf,CAAsBR,MAAM,CAACE,OAA7B,EAAsC,CAAtC,CADE;AAELT,QAAAA,QAAQ,EAAEA;AAFL,OAAP;;AAKF,SAAKT,sBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAKF;AACE,aAAO,EACL,GAAGH;AADE,OAAP;AA1EJ;AA8ED,CA/EM,C,CAiFP","sourcesContent":["import {\n  SET_DELETING_ITEM,\n  SET_IS_LOADING,\n  PRODUCT_RECEIVED,\n  PRODUCT_REMOVED,\n  PRODUCT_DETAILS_LOADED,\n  SET_PRODUCTID,\n  ADD_PRODUCT_BASKET,\n  GET_NUMBERS_BASKET,\n  INCREASE_QUANTITY,\n  DECREASE_QUANTITY,\n} from \"./../actions/products/type\";\n\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n  productSelected: ''\n};\n\n//TODO\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      let productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true;\n      console.log(\"productSelected is>>\", productSelected);\n\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n        // products:{\n        //   ...state.products,\n        //   [action.payload]: productSelected\n        // }\n      };\n\n    case GET_NUMBERS_BASKET:\n      return {\n        ...state,\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      return {\n        ...state,\n        cartCost: state.cartCost + productSelected.price\n      };\n\n    case DECREASE_QUANTITY:\n      return {\n        ...state,\n      };\n\n    case PRODUCT_RECEIVED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_PRODUCTID:\n      return {\n        ...state,\n        productId: action.payload,\n      };\n\n    case SET_DELETING_ITEM:\n      return {\n        ...state,\n        deletingItem: action.payload,\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products;\n      // products.splice(action.payload, 1)\n      return {\n        ...state.products.splice(action.payload, 1),\n        products: products,\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\n//the sole purpoose of reducer is to upadte store\n"]},"metadata":{},"sourceType":"module"}