{"ast":null,"code":"import { SET_DELETING_ITEM, SET_IS_LOADING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_DETAILS_LOADED, SET_PRODUCTID, ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET, INCREASE_QUANTITY, DECREASE_QUANTITY, CLEAR_PRODUCT, LOGOUT } from \"./../actions/products/type\";\nimport { productQuantity } from \"../actions/products/productActions\";\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n  productSelected: ''\n}; //TODO\n\nexport const productReducer = (state = initialState, action) => {\n  let productSelected = \"\";\n\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true; // console.log(\"productSelected is>>\", productSelected);\n\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n        products: state.productSelected.map(ps => {\n          ps.inCart = true, ps.quantity += 1;\n        })\n      };\n\n    case GET_NUMBERS_BASKET:\n      return { ...state\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      console.log(\"product selected is>>\", productSelected);\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price\n      };\n\n    case DECREASE_QUANTITY:\n      let newCartCost = 0;\n      productSelected = action.payload;\n      let newBasketNum = 0; // productSelected.quantity === 0 ? productSelected.quantity = 0 : productSelected.quantity -= 1 ;\n\n      if (productSelected.quantity === 0) {\n        productSelected.quantity = 0;\n        newCartCost = state.cartCost;\n        newBasketNum = state.basketNumbers;\n      } else {\n        productSelected.quantity -= 1;\n        newCartCost = state.cartCost - productSelected.price;\n        newBasketNum = state.basketNumbers - 1;\n      } // console.log('product selected is>>',productSelected)\n\n\n      return { ...state,\n        basketNumbers: newBasketNum,\n        cartCost: newCartCost\n      };\n\n    case CLEAR_PRODUCT:\n      productSelected = action.payload;\n      let num = productSelected.quantity;\n      productSelected.quantity = 0;\n      productSelected.inCart = false;\n      return { ...state,\n        basketNumbers: state.basketNumbers - num,\n        cartCost: state.cartCost - num * productSelected.price\n      };\n\n    case PRODUCT_RECEIVED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case SET_IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case SET_PRODUCTID:\n      return { ...state,\n        productId: action.payload\n      };\n\n    case SET_DELETING_ITEM:\n      return { ...state,\n        deletingItem: action.payload\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products; // products.splice(action.payload, 1)\n\n      return { ...state.products.splice(action.payload, 1),\n        products: products\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //the sole purpoose of reducer is to upadte store","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/reducers/product.reducer.js"],"names":["SET_DELETING_ITEM","SET_IS_LOADING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_DETAILS_LOADED","SET_PRODUCTID","ADD_PRODUCT_BASKET","GET_NUMBERS_BASKET","INCREASE_QUANTITY","DECREASE_QUANTITY","CLEAR_PRODUCT","LOGOUT","productQuantity","initialState","isLoading","productId","products","deletingItem","basketNumbers","cartCost","productSelected","productReducer","state","action","type","payload","quantity","inCart","price","map","ps","console","log","newCartCost","newBasketNum","num","splice","localStorage","clear"],"mappings":"AAAA,SACEA,iBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,sBALF,EAMEC,aANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,iBATF,EAUEC,iBAVF,EAWEC,aAXF,EAYEC,MAZF,QAaO,4BAbP;AAcA,SAASC,eAAT,QAAgC,oCAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,aAAa,EAAE,CALI;AAMnBC,EAAAA,QAAQ,EAAE,CANS;AAOnBC,EAAAA,eAAe,EAAE;AAPE,CAArB,C,CAUA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9D,MAAIH,eAAe,GAAG,EAAtB;;AACA,UAAQG,MAAM,CAACC,IAAf;AACE,SAAKlB,kBAAL;AACEc,MAAAA,eAAe,GAAGG,MAAM,CAACE,OAAzB;AACAL,MAAAA,eAAe,CAACM,QAAhB,IAA4B,CAA5B;AACAN,MAAAA,eAAe,CAACO,MAAhB,GAAyB,IAAzB,CAHF,CAIE;;AAEA,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,aAAa,EAAEI,KAAK,CAACJ,aAAN,GAAsB,CAFhC;AAGLC,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiBC,eAAe,CAACQ,KAHtC;AAILZ,QAAAA,QAAQ,EAAEM,KAAK,CAACF,eAAN,CAAsBS,GAAtB,CAA0BC,EAAE,IAAI;AACxCA,UAAAA,EAAE,CAACH,MAAH,GAAY,IAAZ,EACAG,EAAE,CAACJ,QAAH,IAAe,CADf;AAED,SAHS;AAJL,OAAP;;AAUF,SAAKnB,kBAAL;AACE,aAAO,EACL,GAAGe;AADE,OAAP;;AAIF,SAAKd,iBAAL;AACEY,MAAAA,eAAe,GAAGG,MAAM,CAACE,OAAzB;AACAL,MAAAA,eAAe,CAACM,QAAhB,IAA4B,CAA5B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCZ,eAArC;AACA,aAAO,EACL,GAAGE,KADE;AAELJ,QAAAA,aAAa,EAAEI,KAAK,CAACJ,aAAN,GAAsB,CAFhC;AAGLC,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiBC,eAAe,CAACQ;AAHtC,OAAP;;AAMF,SAAKnB,iBAAL;AACE,UAAIwB,WAAW,GAAG,CAAlB;AACAb,MAAAA,eAAe,GAAGG,MAAM,CAACE,OAAzB;AACA,UAAIS,YAAY,GAAG,CAAnB,CAHF,CAIE;;AACA,UAAId,eAAe,CAACM,QAAhB,KAA6B,CAAjC,EAAoC;AAClCN,QAAAA,eAAe,CAACM,QAAhB,GAA2B,CAA3B;AACAO,QAAAA,WAAW,GAAGX,KAAK,CAACH,QAApB;AACAe,QAAAA,YAAY,GAAGZ,KAAK,CAACJ,aAArB;AACD,OAJD,MAIO;AACLE,QAAAA,eAAe,CAACM,QAAhB,IAA4B,CAA5B;AACAO,QAAAA,WAAW,GAAGX,KAAK,CAACH,QAAN,GAAiBC,eAAe,CAACQ,KAA/C;AACAM,QAAAA,YAAY,GAAGZ,KAAK,CAACJ,aAAN,GAAsB,CAArC;AACD,OAbH,CAcE;;;AACA,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,aAAa,EAAEgB,YAFV;AAGLf,QAAAA,QAAQ,EAAEc;AAHL,OAAP;;AAMF,SAAKvB,aAAL;AACEU,MAAAA,eAAe,GAAGG,MAAM,CAACE,OAAzB;AACA,UAAIU,GAAG,GAAGf,eAAe,CAACM,QAA1B;AACAN,MAAAA,eAAe,CAACM,QAAhB,GAA2B,CAA3B;AACAN,MAAAA,eAAe,CAACO,MAAhB,GAAyB,KAAzB;AACA,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,aAAa,EAAEI,KAAK,CAACJ,aAAN,GAAsBiB,GAFhC;AAGLhB,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,GAAiBgB,GAAG,GAAGf,eAAe,CAACQ;AAH5C,OAAP;;AAMF,SAAK1B,gBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAKF,SAAKxB,cAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELR,QAAAA,SAAS,EAAES,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKpB,aAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELP,QAAAA,SAAS,EAAEQ,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKzB,iBAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAFhB,OAAP;;AAKF,SAAKtB,eAAL;AACE,YAAMa,QAAQ,GAAGM,KAAK,CAACN,QAAvB,CADF,CAEE;;AACA,aAAO,EACL,GAAGM,KAAK,CAACN,QAAN,CAAeoB,MAAf,CAAsBb,MAAM,CAACE,OAA7B,EAAsC,CAAtC,CADE;AAELT,QAAAA,QAAQ,EAAEA;AAFL,OAAP;;AAKF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFZ,OAAP;;AAKF,SAAKd,MAAL;AACE0B,MAAAA,YAAY,CAACC,KAAb;AACA,aAAO,EACL,GAAGhB;AADE,OAAP;;AAIF;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA7GJ;AAiHD,CAnHM,C,CAqHP","sourcesContent":["import {\n  SET_DELETING_ITEM,\n  SET_IS_LOADING,\n  PRODUCT_RECEIVED,\n  PRODUCT_REMOVED,\n  PRODUCT_DETAILS_LOADED,\n  SET_PRODUCTID,\n  ADD_PRODUCT_BASKET,\n  GET_NUMBERS_BASKET,\n  INCREASE_QUANTITY,\n  DECREASE_QUANTITY,\n  CLEAR_PRODUCT,\n  LOGOUT,\n} from \"./../actions/products/type\";\nimport { productQuantity } from \"../actions/products/productActions\";\n\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n  productSelected: ''\n};\n\n//TODO\nexport const productReducer = (state = initialState, action) => {\n  let productSelected = \"\";\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true;\n      // console.log(\"productSelected is>>\", productSelected);\n\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n        products: state.productSelected.map(ps => {\n          ps.inCart = true,\n          ps.quantity += 1\n        })\n      };\n\n    case GET_NUMBERS_BASKET:\n      return {\n        ...state,\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      console.log(\"product selected is>>\", productSelected);\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n      };\n\n    case DECREASE_QUANTITY:\n      let newCartCost = 0;\n      productSelected = action.payload;\n      let newBasketNum = 0;\n      // productSelected.quantity === 0 ? productSelected.quantity = 0 : productSelected.quantity -= 1 ;\n      if (productSelected.quantity === 0) {\n        productSelected.quantity = 0;\n        newCartCost = state.cartCost;\n        newBasketNum = state.basketNumbers;\n      } else {\n        productSelected.quantity -= 1;\n        newCartCost = state.cartCost - productSelected.price;\n        newBasketNum = state.basketNumbers - 1;\n      }\n      // console.log('product selected is>>',productSelected)\n      return {\n        ...state,\n        basketNumbers: newBasketNum,\n        cartCost: newCartCost,\n      };\n\n    case CLEAR_PRODUCT:\n      productSelected = action.payload;\n      let num = productSelected.quantity;\n      productSelected.quantity = 0;\n      productSelected.inCart = false;\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers - num,\n        cartCost: state.cartCost - num * productSelected.price,\n      };\n\n    case PRODUCT_RECEIVED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_PRODUCTID:\n      return {\n        ...state,\n        productId: action.payload,\n      };\n\n    case SET_DELETING_ITEM:\n      return {\n        ...state,\n        deletingItem: action.payload,\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products;\n      // products.splice(action.payload, 1)\n      return {\n        ...state.products.splice(action.payload, 1),\n        products: products,\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return {\n        ...state,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\n//the sole purpoose of reducer is to upadte store\n"]},"metadata":{},"sourceType":"module"}