{"ast":null,"code":"import { SET_DELETING_ITEM, SET_IS_LOADING, PRODUCT_RECEIVED, PRODUCT_REMOVED, PRODUCT_DETAILS_LOADED, SET_PRODUCTID, ADD_PRODUCT_BASKET, GET_NUMBERS_BASKET, INCREASE_QUANTITY, DECREASE_QUANTITY, CLEAR_PRODUCT } from \"./../actions/products/type\";\nimport { productQuantity } from \"../actions/products/productActions\";\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0\n}; //TODO\n\nexport const productReducer = (state = initialState, action) => {\n  let productSelected = '';\n\n  switch (action.type) {\n    case ADD_PRODUCT_BASKET:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true; // console.log(\"productSelected is>>\", productSelected);\n\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n        // products:{\n        //   ...state.products,\n        //   [action.payload]: productSelected\n        // }\n        products: { ...state\n        }\n      };\n\n    case GET_NUMBERS_BASKET:\n      return { ...state\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      console.log('product selected is>>', productSelected);\n      return { ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price\n      };\n\n    case DECREASE_QUANTITY:\n      let newCartCost = 0;\n      productSelected = action.payload;\n      let newBasketNum = 0; // productSelected.quantity === 0 ? productSelected.quantity = 0 : productSelected.quantity -= 1 ;\n\n      if (productSelected.quantity === 0) {\n        productSelected.quantity = 0;\n        newCartCost = state.cartCost;\n        newBasketNum = state.basketNumbers;\n      } else {\n        productSelected.quantity -= 1;\n        newCartCost = state.cartCost - productSelected.price;\n        newBasketNum = state.basketNumbers - 1;\n      } // console.log('product selected is>>',productSelected)\n\n\n      return { ...state,\n        basketNumbers: newBasketNum,\n        cartCost: newCartCost\n      };\n\n    case CLEAR_PRODUCT:\n      productSelected = action.payload;\n      let num = productSelected.quantity;\n      productSelected.quantity = 0;\n      productSelected.inCart = false;\n      return { ...state,\n        basketNumbers: state.basketNumbers - num,\n        cartCost: state.cartCost - num * productSelected.price\n      };\n\n    case PRODUCT_RECEIVED:\n      return { ...state,\n        products: action.payload\n      };\n\n    case SET_IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case SET_PRODUCTID:\n      return { ...state,\n        productId: action.payload\n      };\n\n    case SET_DELETING_ITEM:\n      return { ...state,\n        deletingItem: action.payload\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products; // products.splice(action.payload, 1)\n\n      return { ...state.products.splice(action.payload, 1),\n        products: products\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return { ...state,\n        products: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; //the sole purpoose of reducer is to upadte store","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/reducers/product.reducer.js"],"names":["SET_DELETING_ITEM","SET_IS_LOADING","PRODUCT_RECEIVED","PRODUCT_REMOVED","PRODUCT_DETAILS_LOADED","SET_PRODUCTID","ADD_PRODUCT_BASKET","GET_NUMBERS_BASKET","INCREASE_QUANTITY","DECREASE_QUANTITY","CLEAR_PRODUCT","productQuantity","initialState","isLoading","productId","products","deletingItem","basketNumbers","cartCost","productReducer","state","action","productSelected","type","payload","quantity","inCart","price","console","log","newCartCost","newBasketNum","num","splice"],"mappings":"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","sourcesContent":["import {\n  SET_DELETING_ITEM,\n  SET_IS_LOADING,\n  PRODUCT_RECEIVED,\n  PRODUCT_REMOVED,\n  PRODUCT_DETAILS_LOADED,\n  SET_PRODUCTID,\n  ADD_PRODUCT_BASKET,\n  GET_NUMBERS_BASKET,\n  INCREASE_QUANTITY,\n  DECREASE_QUANTITY,\n  CLEAR_PRODUCT,\n} from \"./../actions/products/type\";\nimport { productQuantity } from \"../actions/products/productActions\";\n\nconst initialState = {\n  isLoading: false,\n  productId: {},\n  products: [],\n  deletingItem: [],\n  basketNumbers: 0,\n  cartCost: 0,\n};\n\n//TODO\nexport const productReducer = (state = initialState, action) => {\n  let productSelected = '';\n  switch (action.type) {\n    \n    case ADD_PRODUCT_BASKET:\n      productSelected = action.payload;\n      productSelected.quantity += 1;\n      productSelected.inCart = true;\n      // console.log(\"productSelected is>>\", productSelected);\n\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n        // products:{\n        //   ...state.products,\n        //   [action.payload]: productSelected\n        // }\n        products: {\n          ...state\n        }\n      };\n\n    case GET_NUMBERS_BASKET:\n      return {\n        ...state,\n      };\n\n    case INCREASE_QUANTITY:\n      productSelected = action.payload\n      productSelected.quantity += 1;\n      console.log('product selected is>>',productSelected)\n      return {\n        ...state,\n        basketNumbers: state.basketNumbers + 1,\n        cartCost: state.cartCost + productSelected.price,\n       \n      };\n\n    case DECREASE_QUANTITY:\n      let newCartCost = 0;\n      productSelected = action.payload;\n      let newBasketNum = 0;\n      // productSelected.quantity === 0 ? productSelected.quantity = 0 : productSelected.quantity -= 1 ;\n      if(productSelected.quantity === 0){\n        productSelected.quantity = 0;\n        newCartCost = state.cartCost;\n        newBasketNum = state.basketNumbers;\n      }else{\n        productSelected.quantity -= 1;\n        newCartCost = state.cartCost - productSelected.price;\n        newBasketNum = state.basketNumbers - 1;\n      }\n      // console.log('product selected is>>',productSelected)\n      return {\n        ...state,\n        basketNumbers: newBasketNum,\n        cartCost: newCartCost\n       \n      };\n\n    case CLEAR_PRODUCT:\n      productSelected = action.payload;\n      let num = productSelected.quantity;\n      productSelected.quantity = 0;\n      productSelected.inCart = false;\n      return{\n        ...state,\n        basketNumbers: state.basketNumbers - num,\n        cartCost: state.cartCost - (num * productSelected.price),\n\n      }\n\n\n\n    case PRODUCT_RECEIVED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n    case SET_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case SET_PRODUCTID:\n      return {\n        ...state,\n        productId: action.payload,\n      };\n\n    case SET_DELETING_ITEM:\n      return {\n        ...state,\n        deletingItem: action.payload,\n      };\n\n    case PRODUCT_REMOVED:\n      const products = state.products;\n      // products.splice(action.payload, 1)\n      return {\n        ...state.products.splice(action.payload, 1),\n        products: products,\n      };\n\n    case PRODUCT_DETAILS_LOADED:\n      return {\n        ...state,\n        products: action.payload,\n      };\n\n      \n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\n//the sole purpoose of reducer is to upadte store\n"]},"metadata":{},"sourceType":"module"}