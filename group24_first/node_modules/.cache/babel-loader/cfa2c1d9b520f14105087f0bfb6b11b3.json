{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react_1/group24_first/src/components/auth/login/login.component.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Notify from \"./../../util/notify\";\nimport axios from 'axios';\nexport class Login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.post('http://localhost:9090/api/auth/login', this.state.data, {}).then(response => {\n        console.log('response >>', response);\n        Notify.showSuccess('Login Successful');\n        this.props.history.push('/dashboard/dynamic');\n      }).catch(err => {\n        Notify.handleError(err);\n      }); // const { chapter } = this.state;\n      // chapter += 1;\n      // let chapter = this.state.chapter;\n      // let newChapter = chapter + 1;\n      // this.setState({\n      //   chapter : newChapter\n      // })\n      // console.log(\"Check state>>\", this.state);\n      //http with username and password\n    };\n\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\"\n      },\n      error: {\n        username: \"\",\n        password: \"\"\n      },\n      remember_me: false,\n      isSubmitting: false,\n      isValidForm: false\n    };\n    this.handleChanges = this.handleChanges.bind(this); //bind gareko\n    // console.log(\"Constructor is first\");\n  } // componentWillMount(){\n  //   console.log('Before render component will mount');\n  // }\n\n\n  componentDidMount() {// console.log('check props >>', this.props)\n    // Notify.showSuccess('Login page loaded');\n    //self invoked block\n    // console.log('I am component did mount');\n    // let { chapter } = this.state;\n    // this.interval = setInterval(() => {\n    //   chapter++;\n    //   this.setState({\n    //     chapter\n    //   })\n    // },1000)\n  }\n\n  componentDidUpdate(prevProps, prevState) {// console.log('prev state>>',prevState);\n    // console.log('Once the component data is updated > props or state');\n  }\n\n  componentWillUnmount() {// console.log('once component is destroyed');\n    // clearInterval(this.interval);\n    //its purpose is to close all unfinished jobs\n  }\n\n  handleChanges(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState(preState => ({\n      data: { ...preState.data,\n        [name]: value\n      }\n    }), () => {\n      this.validateForm(name);\n    }); //State change trigger\n  }\n\n  validateForm(fieldName) {\n    let errMsg = this.state.data[fieldName] ? \"\" : `${fieldName} is required`;\n    this.setState(preState => ({\n      error: { ...preState.error,\n        [fieldName]: errMsg\n      }\n    }), () => {\n      //check form is valid\n      let errors = Object.values(this.state.error).filer(error => error);\n      this.setState({\n        isValidForm: errors.length === 0\n      });\n    });\n  }\n\n  render() {\n    // console.log(\"render at second\");\n    let btn = this.state.isSubmitting ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info mt-2\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, \"Loginin...\") : /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !this.state.isValidForm,\n      className: \"btn btn-primary mt-2\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, \"Login\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Please login to start your session\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group form-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      className: \"form-control\",\n      id: \"username\",\n      name: \"username\",\n      onChange: this.handleChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, this.state.error.username), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      className: \"form-control\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.handleChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, this.state.error.username), btn), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, \"Don't have an account?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"Register \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 20\n      }\n    }, \"Here\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pull_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/forgot_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"forgot password?\"))));\n  }\n\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/react_1/group24_first/src/components/auth/login/login.component.js"],"names":["React","Component","Link","Notify","axios","Login","constructor","handleSubmit","e","preventDefault","post","state","data","then","response","console","log","showSuccess","props","history","push","catch","err","handleError","username","password","error","remember_me","isSubmitting","isValidForm","handleChanges","bind","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","event","name","value","target","setState","preState","validateForm","fieldName","errMsg","errors","Object","values","filer","length","render","btn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Notify from \"./../../util/notify\";\nimport axios from 'axios';\n\nexport class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n      },\n      error: {\n        username: \"\",\n        password: \"\",\n      },\n      remember_me: false,\n      isSubmitting: false,\n      isValidForm: false,\n    };\n    this.handleChanges = this.handleChanges.bind(this); //bind gareko\n    // console.log(\"Constructor is first\");\n  }\n\n  // componentWillMount(){\n  //   console.log('Before render component will mount');\n  // }\n\n  componentDidMount() {\n    // console.log('check props >>', this.props)\n    // Notify.showSuccess('Login page loaded');\n    //self invoked block\n    // console.log('I am component did mount');\n    // let { chapter } = this.state;\n    // this.interval = setInterval(() => {\n    //   chapter++;\n    //   this.setState({\n    //     chapter\n    //   })\n    // },1000)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('prev state>>',prevState);\n    // console.log('Once the component data is updated > props or state');\n  }\n\n  componentWillUnmount() {\n    // console.log('once component is destroyed');\n    // clearInterval(this.interval);\n    //its purpose is to close all unfinished jobs\n  }\n\n  handleChanges(event) {\n    const { name, value } = event.target;\n    this.setState(\n      (preState) => ({\n        data: {\n          ...preState.data,\n          [name]: value,\n        }\n      }),\n      () => {\n        this.validateForm(name);\n      }\n    );\n    //State change trigger\n  }\n\n  validateForm(fieldName) {\n    let errMsg = this.state.data[fieldName] ? \"\" : `${fieldName} is required`;\n    this.setState(\n      (preState) => ({\n        error: {\n          ...preState.error,\n          [fieldName]: errMsg,\n        },\n      }),\n      () => {\n        //check form is valid\n        let errors = Object.values(this.state.error).filer((error) => error);\n        this.setState({\n          isValidForm: errors.length === 0,\n        });\n      }\n    );\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:9090/api/auth/login',this.state.data, {})\n      .then(response => {\n        console.log('response >>', response);\n        Notify.showSuccess('Login Successful');\n        this.props.history.push('/dashboard/dynamic');\n      })\n      .catch(err => {\n        Notify.handleError(err);\n      })\n\n    // const { chapter } = this.state;\n    // chapter += 1;\n    // let chapter = this.state.chapter;\n    // let newChapter = chapter + 1;\n    // this.setState({\n    //   chapter : newChapter\n    // })\n    // console.log(\"Check state>>\", this.state);\n    //http with username and password\n  };\n\n  render() {\n    // console.log(\"render at second\");\n    let btn = this.state.isSubmitting ? (\n      <button className=\"btn btn-info mt-2\" disabled>\n        Loginin...\n      </button>\n    ) : (\n      <button\n        disabled={!this.state.isValidForm}\n        className=\"btn btn-primary mt-2\"\n        onClick={this.handleSubmit}\n      >\n        Login\n      </button>\n    );\n    return (\n      <div>\n        <h2>Login</h2>\n        <p>Please login to start your session</p>\n        <form className=\"form-group form-main\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            className=\"form-control\"\n            id=\"username\"\n            name=\"username\"\n            onChange={this.handleChanges}\n          />\n          <p className=\"error\">{this.state.error.username}</p>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            onChange={this.handleChanges}\n          />\n          <p className=\"error\">{this.state.error.username}</p>\n          {btn}\n        </form>\n        {/* <p>Current Chapter : {this.state.chapter}</p> */}\n        <p>Don't have an account?</p>\n        <p>\n          Register <Link to=\"/register\">Here</Link>\n          <span className=\"pull_right\">\n            <Link to=\"/forgot_password\">forgot password?</Link>\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}